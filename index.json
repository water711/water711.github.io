[{"date":"29 May, 2021","subtitle":"在做图形渲染的时候，想了解GPU的使用情况，但是win7的任务管理器没有GPU的信息，还好NVIDIA提供了相关的命令\n进入cmd命令行\ncd C:\\Program Files\\NVIDIA Corporation\\NVSMI #如果该目录加入了环境变量，可忽略 nvidia-smi.exe -h 查看帮助 nvidia-smi.exe -l 3 查看GPU使用率，每3秒刷新一次","tags":"","title":"Win7下查看NVIDIA显卡的GPU使用率","url":"/posts/2021-05-29-win7%E4%B8%8B%E6%9F%A5%E7%9C%8Bnvidia%E6%98%BE%E5%8D%A1%E7%9A%84gpu%E4%BD%BF%E7%94%A8%E7%8E%87/"},{"date":"13 May, 2021","subtitle":"一、安装安装 pip3 install jupyter notebook\n运行 jupyter notebook\n浏览器访问 http://localhost:8888/undefined/tree\n二、配置远程访问1、生成配置文件\njupyter notebook \u0026ndash;generate-config #运行后输出：Writing default config to: C:\\Users\\administrator\\.jupyter\\jupyter_notebook_config.py\n2、设置密码\njupyter notebook password\n3、修改配置文件\nC:\\Users\\administrator\\.jupyter\\jupyter_notebook_config.py\n把前面的#号注释去掉 c.NotebookApp.ip = \u0026lsquo;*\u0026rsquo; #允许所有ip访问，如报错 No address associated with hostname可设置为:\u0026lsquo;0.0.0.0\u0026rsquo; c.NotebookApp.open_browser = False #不打开浏览器 c.NotebookApp.port = 8888 #端口为8888\n4、本机运行服务\njupyter notebook\n5、局域网电脑浏览器访问\nhttp://IP:8888/undefined/tree","tags":"","title":"安装Jupyter Notebook并配置远程登录","url":"/posts/2021-05-13-%E5%AE%89%E8%A3%85jupyter-notebook%E5%B9%B6%E9%85%8D%E7%BD%AE%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"},{"date":"26 April, 2021","subtitle":"1、安装 x11vncapt install x11vnc -y\n2、生成密码文件x11vnc -storepasswd 123456 /etc/x11vnc.pass\n参数说明： -storepasswd：指定一个密码 /etc/x11vnc.pass：保存的路径（任意）\n3、新建systemd 配置_文件_vim /lib/systemd/system/x11vnc.service\n[Unit] Description=Start x11vnc at startup After=multi-user.target [Service] Type=simple ExecStart=/usr/bin/x11vnc -auth guess -forever -loop -noxdamage -repeat -rfbauth /etc/x11vnc.pass -rfbport 5900 -shared -capslock -nomodtweak [Install] WantedBy=multi-user.target\nExecStart 启动命令中，指定刚刚生成的 密码文件 和 端口\n4、启动VNC服务systemctl enable x11vnc.service systemctl restart x11vnc.service netstat -tunlp | grep 5900","tags":"","title":"Kali2021安装VNC","url":"/posts/2021-04-26-kali2021%E5%AE%89%E8%A3%85vnc/"},{"date":"26 April, 2021","subtitle":"一、安装pyaudio软件包1、下载whl文件\nhttps://github.com/intxcc/pyaudio_portaudio/releases\n2、安装pyaudio\npip install PyAudio-0.2.11-cp37-cp37m-win_amd64.whl\n二、代码文件import wave from pyaudio import PyAudio,paInt16 from datetime import datetime\nframerate=16000 NUM_SAMPLES=2000 channels=1 sampwidth=2 TIME=300 #每次录制秒数 count=12 #录制多少次\ndef save_wave_file(filename,data): \u0026lsquo;\u0026lsquo;\u0026lsquo;save the data to the wavfile\u0026rsquo;\u0026rsquo;\u0026rsquo; wf=wave.open(filename,\u0026lsquo;wb\u0026rsquo;) wf.setnchannels(channels) wf.setsampwidth(sampwidth) wf.setframerate(framerate) wf.writeframes(b\u0026quot;\u0026quot;.join(data)) wf.close()\ndef my_record(): file_name = datetime.now().strftime(\u0026quot;%Y%m%d_%H%M%S\u0026quot;) + \u0026lsquo;.wav\u0026rsquo; pa=PyAudio() stream=pa.open(format = paInt16,channels=1, rate=framerate,input=True, frames_per_buffer=NUM_SAMPLES) my_buf=[] count=0 while count\u0026lt;TIME*8:#控制录音时间 string_audio_data = stream.read(NUM_SAMPLES) my_buf.append(string_audio_data) count+=1 #print(\u0026rsquo;.\u0026rsquo;) save_wave_file(file_name,my_buf) stream.close()\nif __name__ == \u0026lsquo;__main__\u0026rsquo;: for i in range(count): my_record()","tags":"","title":"Python实现录音功能","url":"/posts/2021-04-26-python%E5%AE%9E%E7%8E%B0%E5%BD%95%E9%9F%B3%E5%8A%9F%E8%83%BD/"},{"date":"5 April, 2021","subtitle":"一、使用docker安装docker hub仓库地址：https://hub.docker.com/r/linuxserver/transmission\n1、下载镜像\ndocker pull linuxserver/transmission\n2、运行容器\ndocker run -d \\ \u0026ndash;name=transmission \\ -e PUID=1000 \\ -e PGID=1000 \\ -e TZ=Asia/Shanghai \\ -e TRANSMISSION_WEB_HOME=/transmission-web-control/ `#optional` \\ -e USER=username `#optional` \\ -e PASS=password `#optional` \\ -p 9091:9091 \\ -p 51413:51413 \\ -p 51413:51413/udp \\ -v /mnt/transmission/config:/config \\ -v /mnt/transmission/downloads:/downloads \\ -v /mnt/transmission/watch:/watch \\ \u0026ndash;restart unless-stopped \\ linuxserver/transmission\n3、配置文件地址\nvim /mnt/transmission/config/settings.json\n二、使用yum安装1、安装\nyum -y install epel-release yum install tranmission transmission-daemon systemctl start transmission-daemon.","tags":"","title":"centos7安装transmission","url":"/posts/2021-04-05-centos7%E5%AE%89%E8%A3%85transmission/"},{"date":"4 April, 2021","subtitle":"使用 Docker 镜像快速搭建 IPsec VPN 服务器。支持 IPsec/L2TP，Cisco IPsec 和 IKEv2 协议。\n作者github地址：https://github.com/hwdsl2/docker-ipsec-vpn-server/blob/master/README-zh.md\n一、下载镜像并运行docker run \\ \u0026ndash;name ipsec-vpn-server \\ \u0026ndash;restart=always \\ -v ikev2-vpn-data:/etc/ipsec.d \\ -v /lib/modules:/lib/modules:ro \\ -p 500:500/udp \\ -p 4500:4500/udp \\ -d \u0026ndash;privileged \\ hwdsl2/ipsec-vpn-server\n二、获取 VPN 登录信息docker logs ipsec-vpn-server\n在命令输出中查找下面这些行：\nServer IP: 你的VPN服务器IP IPsec PSK: 你的IPsec预共享密钥 Username: 你的VPN用户名 Password: 你的VPN密码\n三、配置 IPsec/L2TP VPN 客户端https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients-zh.md\n四、取消所有流量走VPN1、禁止PPTP、L2TP 修改本机缺省路由\n点击桌面右下角网络图标，右键点击VPN，选择属性，点击网络-》属性-》高级-》取消“在远程网络上使用默认网关”\n设置后重新连接VPN\n2、设置静态路由，用于访问VPN内网\nroute add 192.168.100.0 mask 255.255.255.0 192.168.42.1","tags":"","title":"使用docker快速搭建L2TP服务器","url":"/posts/2021-04-04-%E4%BD%BF%E7%94%A8docker%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAl2tp%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"date":"24 March, 2021","subtitle":"很多时候写了定时任务却发现没有执行，或者执行失败，但因为crond是后台运行的，有没有任何提示，很难进行排错。但是可以让crond运行在前端并进行调试的。\ncrond是允许接受选项的\ncrond [-n] [-P] [-x flags] 选项说明： -n：让crond以前端方式运行，即不依赖于终端。 -P：不重设环境变量PATH，而是从父进程中继承。 -x：设置调试项，flags是调试方式，比较有用的方式是test和sch，即\u0026quot;-x test\u0026quot;和\u0026quot;-x sch\u0026quot;。 ：其中test调试将不会真正的执行，sch调试显示调度信息，可以看到等待时间。具体的见下面的示例。\n执行crond并带上调试选项test。\n[root@nas ~]# crond -x test debug flags enabled: test crond: can\u0026rsquo;t lock /var/run/crond.pid, otherpid may be 19023: Resource temporarily unavailable log_it: (CRON 4743) DEATH (can\u0026rsquo;t lock /var/run/crond.pid, otherpid may be 19023): Resource temporarily unavailable\n提示 can't lock /var/run/crond.pid ，处理方法：rm -rf /var/run/crond.pid\ncrond调试正常显示如下：\n[root@server2 ~]# crond -x test debug flags enabled: test [4903] cron started log_it: (CRON 4903) INFO (RANDOM_DELAY will be scaled with factor 8% if used.","tags":"","title":"crond任务没有正常执行的排查方法","url":"/posts/2021-03-24-crond%E4%BB%BB%E5%8A%A1%E6%B2%A1%E6%9C%89%E6%AD%A3%E5%B8%B8%E6%89%A7%E8%A1%8C%E7%9A%84%E6%8E%92%E6%9F%A5%E6%96%B9%E6%B3%95/"},{"date":"20 March, 2021","subtitle":".vhdx是从Windows server 2012起引入的一种磁盘格式，是.vhd的升级版。与后者相比，vhdx格式的虚拟硬盘可以更好地保护数据，避免突然断电造成的数据损坏。\n在已经开启了hyper-v的电脑上进行镜像转换：1、以管理员权限打开powershell\nConvert-VHD –Path hyper镜像路径 –DestinationPath 转换成镜像路径\n例如： Convert-VHD -Path c:\\Ubuntu.vhdx -DestinationPath d:\\Ubuntu_vhd.vhd\nPS：注意两个路径都要带后缀，文件名中如果存在空格则需要使用单引号括起来。\n2、转换完成后，用VirtualBox新建虚拟机（不创建硬盘），并加载转换后的硬盘镜像，启动","tags":"","title":"Hyper-V的vhdx格式磁盘镜像转换为VirtualBox支持的vhd格式","url":"/posts/2021-03-20-hyper-v%E7%9A%84vhdx%E6%A0%BC%E5%BC%8F%E7%A3%81%E7%9B%98%E9%95%9C%E5%83%8F%E8%BD%AC%E6%8D%A2%E4%B8%BAvirtualbox%E6%94%AF%E6%8C%81%E7%9A%84vhd%E6%A0%BC%E5%BC%8F/"},{"date":"15 February, 2021","subtitle":"一、下载解压运行各平台clash安装包链接：https://github.com/Dreamacro/clash/releases\nmkdir clash #创建目录 cd clash #进入目录 wget http://xxxxxxclash-linux-amd64-v1.3.5.gz #下载clash gunzip clash-linux-amd64-v1.3.5.gz #解压 mv clash-linux-amd64-v1.3.5 clash #重命名 chmod +x clash #添加可执行权限\n./clash #前台运行clashINFO[0000] Can\u0026rsquo;t find config, create a initial config file INFO[0000] Can\u0026rsquo;t find MMDB, start download INFO[0205] HTTP proxy listening at: 127.0.0.1:7890\n第一次启动会在用户目录下 ~/.config/clash 自动生成Config.yaml 和Country.mmdb两个文件\n生成的Config.yaml文件只一行 port: 7890，需要后续配置自己的代理信息\n二、关于配置文件有些机场商家会提供相应的yaml文件，复制进clash配置文件目录即可，如果提供的文件类型为yml类型，直接修改为yaml类型即可\n如运行clash时，出现“FATA[0000] Parse config error: yaml: unmarshal errors”，则需要转换订阅为clash，再重新下载配置\ncd ~/.config/clash wget -O config.yaml http://xxxx.com/link/f?clash=1\u0026log-level=info\n./clash #前台运行INFO[0000] Start initial compatible provider Proxy INFO[0000] Start initial compatible provider Domestic","tags":"","title":"Linux安装使用clash网络代理工具","url":"/posts/2021-02-15-linux%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8clash%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7/"},{"date":"15 February, 2021","subtitle":"一、创建TG机器人1、打开botfather聊天窗口\n手机端：打开TG，点击底部Chats，上方搜索 @botfather ，进行聊天窗口，点击Start\n电脑端：https://telegram.me/BotFather\n2、发送/newbot命令，创建一个机器人\n3、为机器人设置一个呢称，\n4、为机器人设置用户名，以 _bot 结尾，例如： tom_bot\n5、记下botfather机器人发过来的token\n二、获取Chat_id（聊天ID）1、获取自己的Chat_id：搜索@getidsbot，发送 /start 获取\n2、获取群组的Chat_id：\na、将机器人加入到组中\nb、发送任意带斜杆的消息到组中，例如：/hello\nc、获取机器人的更新列表：\nhttps://api.telegram.org/bot这里填入机器人token/getUpdates\nd、在返回的json中，寻找群组的Chat_id，title为组名\n\u0026quot;ok\u0026quot;: true, \u0026quot;result\u0026quot;: \\[ ...... \u0026quot;chat\u0026quot;: { \u0026quot;id\u0026quot;: -524790023, \u0026quot;title\u0026quot;: \u0026quot;test\u0026quot;, \u0026quot;type\u0026quot;: \u0026quot;group\u0026quot;, \u0026quot;all\\_members\\_are\\_administrators\u0026quot;: true }, \u0026quot;date\u0026quot;: 1613358222, \u0026quot;text\u0026quot;: \u0026quot;/hello\u0026quot;, 三、将机器人或群组设为Unmute（取消静音）1、打开telegram，点击底部Chats\n2、找到机器人或群组，左划，点击Unmute\n四、发送通知在浏览器中发送\nhttps://api.telegram.org/bot这里填入机器人token/sendMessage?chat_id=这里填入聊天ID\u0026amp;text=这里填写要发送的消息内容\n在Linux中发送\ncurl -X POST \u0026ldquo;https://api.telegram.org/bot这里填入机器人token/sendMessage\u0026rdquo; -d \u0026ldquo;chat_id=这里填入聊天ID\u0026amp;text=这里填写要发送的消息内容\u0026rdquo;","tags":"","title":"通过TG机器人发送通知到手机","url":"/posts/2021-02-15-%E9%80%9A%E8%BF%87tg%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%8F%91%E9%80%81%E9%80%9A%E7%9F%A5%E5%88%B0%E6%89%8B%E6%9C%BA/"},{"date":"10 February, 2021","subtitle":"一、新建谷歌脚本1、打开Google Apps Script，点击Start Scripting，新建项目\nhttps://www.google.com/script/start/\n2、粘贴以下代码，并修改机器人token（api.telegram.org/bot后面这串字符）\nfunction doGet(e){ return HtmlService.createHtmlOutput(\u0026ldquo;Hello World!! No, this link should be hidden!!!\u0026rdquo;); }\nfunction doPost(e){ var dataFromTelegram = { \u0026ldquo;method\u0026rdquo;: \u0026ldquo;post\u0026rdquo;, \u0026ldquo;payload\u0026rdquo;: e.postData.contents } var body = JSON.parse(e.postData.contents);\nbody.message.chat.id = body.message.chat.id + \u0026lsquo;\u0026rsquo;;\nvar payload = preparePayload(body); var data = { \u0026ldquo;method\u0026rdquo;: \u0026ldquo;post\u0026rdquo;, \u0026ldquo;payload\u0026rdquo;: payload }\nvar dataToTelegram = { \u0026ldquo;method\u0026rdquo;: \u0026ldquo;post\u0026rdquo;, \u0026ldquo;payload\u0026rdquo;: payload }\nUrlFetchApp.fetch(\u0026ldquo;https://api.telegram.org/bot15234456452:AAFMK1UtlJk82pweww2a3gPcu-4YbfE/\", data); } function preparePayload(body){ var payload;\nif (body.message.text){ payload = { \u0026ldquo;method\u0026rdquo;: \u0026ldquo;sendMessage\u0026rdquo;, \u0026ldquo;chat_id\u0026rdquo;: body.","tags":"","title":"Telegram机器人编程，实现复读功能","url":"/posts/2021-02-10-telegram%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%BC%96%E7%A8%8B%E5%AE%9E%E7%8E%B0%E5%A4%8D%E8%AF%BB%E5%8A%9F%E8%83%BD/"},{"date":"10 February, 2021","subtitle":"NAS操作系统：Centos7\n实现原理：通过访问网页，执行含有shell命令的php代码\n1、安装apache和phpyum install -y httpd php\n2、启动apache、关闭selinuxsystemctl start httpd systemctl enable httpd\n#临时关闭selinux setenforce 0\n#永久关闭selinux vim /etc/selinux/config SELINUX=disabled\n3、修改Web端口和目录（可选）vim /etc/httpd/conf/httpd.confListen 1234 \u0026hellip; DocumentRoot \u0026ldquo;/mnt/html\u0026rdquo; \u0026hellip;. \u0026lt;Directory \u0026ldquo;/mnt/html\u0026rdquo;\u0026gt;systemctl restart httpd\n4、测试vim /mnt/html/test.php\u003c?php $cmd = 'dir'; exec($cmd,$output); print\\_r($output); ?\u003e 浏览器运行：http:IP:端口/test.php\n5、为apache用户提权apache用户权限非常低，大部分命令仍然不能运行\nvim /etc/sudoersroot ALL=(ALL) ALL apache ALL=(ALL) NOPASSWD:ALL #添加这一行6、测试vim /mnt/html/test1.php\u003c?php $cmd = 'sudo free -m'; exec($cmd,$output); print\\_r($output); ?\u003e 7、网站安全配置，只允许指定IP访问vim /etc/httpd/conf/httpd.conf\u0026lt;Directory \u0026ldquo;/mnt/html\u0026rdquo;\u0026gt; AllowOverride None Require all granted Deny From all Allow From 127.","tags":"","title":"手机端实现一键发送命令到NAS主机","url":"/posts/2021-02-10-%E6%89%8B%E6%9C%BA%E7%AB%AF%E5%AE%9E%E7%8E%B0%E4%B8%80%E9%94%AE%E5%8F%91%E9%80%81%E5%91%BD%E4%BB%A4%E5%88%B0nas%E4%B8%BB%E6%9C%BA/"},{"date":"9 February, 2021","subtitle":"官网/安装文档：https://www.portainer.io/\nhttps://www.portainer.io/installation/\nhttps://portainer.readthedocs.io/en/stable/deployment.html\nPortainer是Docker的可视化管理工具，提供状态显示面板、应用模板快速部署、容器镜像网络数据卷的基本操作（包括上传下载镜像，创建容器等操作）、事件日志显示、容器控制台操作、Swarm集群和服务等集中管理和操作、登录用户管理和控制等功能。\n一、拉取portainer镜像docker pull portainer/portainer\n二、启动portainerdocker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v /mnt/portainer:/data \u0026ndash;name portainer \u0026ndash;restart=always portainer/portainer\n三、浏览器访问http://服务器IP地址:9000\n1、设置密码\n2、选择Local，连接本地主机docker\n3、查看本地所有容器\n4、查看容器的日志、inspect、占用的硬件资源、执行命令","tags":"","title":"Docker可视化工具--Portainer安装","url":"/posts/2021-02-09-docker%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7-portainer%E5%AE%89%E8%A3%85/"},{"date":"8 February, 2021","subtitle":"1、安装软件包yum -y install samba\n2、建立访问用户useradd test smbpasswd -a test\n3、配置samba共享[data] path = /mnt/data write list = test\n其它参数\nvalid users = name #只允许该用户访问，其它用户可见但无法访问 hosts allow = 192.168.1. #只允许该网段访问 ;前面加分号为注释，等号两边要加空格\n4、启动samba服务systemctl restart smb nmb systemctl enable smb nmb\n5、配置防火墙firewall-cmd \u0026ndash;permanent \u0026ndash;add-service=samba firewall-cmd \u0026ndash;permanent \u0026ndash;add-service=samba-client firewall-cmd \u0026ndash;permanent \u0026ndash;add-service=mouted firewall-cmd \u0026ndash;reload\n6、通过子配置文件，让目录只对有权限的用户可见新建子配置文件\nvim /etc/samba/test1.smb.conf[share11] path = /data/aa valid users = test1\n新建子配置文件\nvim /etc/samba/test2.smb.conf[share12] path = /data/aa valid users = test2\n引用子配置文件\nvim /etc/samba/smb.","tags":"","title":"Centos7 部署Samba服务","url":"/posts/2021-02-08-centos7-%E9%83%A8%E7%BD%B2samba%E6%9C%8D%E5%8A%A1/"},{"date":"8 February, 2021","subtitle":"官方文档：https://gitlab.com/Shinobi-Systems/Shinobi/-/tree/dev/Docker\n一、安装shinobi方法1、使用脚本自动安装（存储路径默认在$HOME目录下）\ncurl -o https://gitlab.com/Shinobi-Systems/Shinobi-Installer/raw/master/shinobi-docker.sh\n方法2、手动安装运行\n安装Shinobi\ndocker run -d \u0026ndash;name=\u0026lsquo;Shinobi\u0026rsquo; -p \u0026lsquo;8080:8080/tcp\u0026rsquo; -v \u0026ldquo;/dev/shm/Shinobi/streams\u0026rdquo;:\u0026rsquo;/dev/shm/streams\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/config\u0026rdquo;:\u0026rsquo;/config\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/customAutoLoad\u0026rdquo;:\u0026rsquo;/home/Shinobi/libs/customAutoLoad\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/database\u0026rdquo;:\u0026rsquo;/var/lib/mysql\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/videos\u0026rdquo;:\u0026rsquo;/home/Shinobi/videos\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/plugins\u0026rdquo;:\u0026rsquo;/home/Shinobi/plugins\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026lsquo;/etc/localtime\u0026rsquo;:\u0026rsquo;/etc/localtime\u0026rsquo;:\u0026lsquo;ro\u0026rsquo; shinobisystems/shinobi:dev\n安装对象检测（可选）\ndocker run -d \u0026ndash;name=\u0026lsquo;shinobi-tensorflow\u0026rsquo; -e PLUGIN_HOST=\u0026lsquo;10.1.103.113\u0026rsquo; -e PLUGIN_PORT=\u0026lsquo;8080\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/docker-plugins/tensorflow\u0026rdquo;:\u0026rsquo;/config\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; shinobisystems/shinobi-tensorflow:latest\n二、添加摄像头1、查看超级用户和密码\ndocker logs ShinobiDefault Superuser : admin@shinobi.video Default Password : admin Log in at http://HOST_IP:SHINOBI_PORT/super\n2、用超级用户登录后台，创建普通用户\nhttp://HOST_IP:SHINOBI_PORT/super\n3、登录普通用户，添加摄像头\n点击左上角加号\n三、Shinobi手机端下载链接：https://cdn.shinobi.video/installers/ShinobiMobile/\n以苹果手机端操作为例\n1、点击Connectto a Shinobi或右下角图标连接Shinobi\n2、输入IP地址、账号和密码，点击Login登录\n3、点击右上角刷新按钮，会出现添加过的摄像头\n4、右击右上角复选框，可全选摄像头，或点击摄像头复选框，选择某个摄像头\n5、点击右上角“小电视”图标，可实时预览所有选中的摄像头，或点击某个摄像头“小电视”图标，预览单个摄像头\n四、修改时区在使用过程中，发现回放的时间和实际时间有差异，比如今天16号，但回放列表显示今天日期是17号\n[root@nas ~]# docker exec -it Shinobi /bin/bash","tags":"","title":"Docker部署开源摄像头录制软件shinobi","url":"/posts/2021-02-08-docker%E9%83%A8%E7%BD%B2%E5%BC%80%E6%BA%90%E6%91%84%E5%83%8F%E5%A4%B4%E5%BD%95%E5%88%B6%E8%BD%AF%E4%BB%B6shinobi/"},{"date":"8 February, 2021","subtitle":"官方文档：https://gitlab.com/Shinobi-Systems/Shinobi/-/tree/dev/Docker\n一、安装shinobi方法1、使用脚本自动安装（存储路径默认在$HOME目录下）\ncurl -o https://gitlab.com/Shinobi-Systems/Shinobi-Installer/raw/master/shinobi-docker.sh\n方法2、手动安装运行\n安装Shinobi\ndocker run -d \u0026ndash;name=\u0026lsquo;Shinobi\u0026rsquo; -p \u0026lsquo;8080:8080/tcp\u0026rsquo; -v \u0026ldquo;/dev/shm/Shinobi/streams\u0026rdquo;:\u0026rsquo;/dev/shm/streams\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/config\u0026rdquo;:\u0026rsquo;/config\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/customAutoLoad\u0026rdquo;:\u0026rsquo;/home/Shinobi/libs/customAutoLoad\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/database\u0026rdquo;:\u0026rsquo;/var/lib/mysql\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/videos\u0026rdquo;:\u0026rsquo;/home/Shinobi/videos\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/plugins\u0026rdquo;:\u0026rsquo;/home/Shinobi/plugins\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; -v \u0026lsquo;/etc/localtime\u0026rsquo;:\u0026rsquo;/etc/localtime\u0026rsquo;:\u0026lsquo;ro\u0026rsquo; shinobisystems/shinobi:dev\n安装对象检测（可选）\ndocker run -d \u0026ndash;name=\u0026lsquo;shinobi-tensorflow\u0026rsquo; -e PLUGIN_HOST=\u0026lsquo;10.1.103.113\u0026rsquo; -e PLUGIN_PORT=\u0026lsquo;8080\u0026rsquo; -v \u0026ldquo;$HOME/Shinobi/docker-plugins/tensorflow\u0026rdquo;:\u0026rsquo;/config\u0026rsquo;:\u0026lsquo;rw\u0026rsquo; shinobisystems/shinobi-tensorflow:latest\n二、添加摄像头1、查看超级用户和密码\ndocker logs ShinobiDefault Superuser : admin@shinobi.video Default Password : admin Log in at http://HOST_IP:SHINOBI_PORT/super\n2、用超级用户登录后台，创建普通用户\nhttp://HOST_IP:SHINOBI_PORT/super\n3、登录普通用户，添加摄像头\n点击左上角加号\n三、Shinobi手机端下载链接：https://cdn.shinobi.video/installers/ShinobiMobile/\n以苹果手机端操作为例\n1、点击Connectto a Shinobi或右下角图标连接Shinobi\n2、输入IP地址、账号和密码，点击Login登录\n3、点击右上角刷新按钮，会出现添加过的摄像头\n4、右击右上角复选框，可全选摄像头，或点击摄像头复选框，选择某个摄像头\n5、点击右上角“小电视”图标，可实时预览所有选中的摄像头，或点击某个摄像头“小电视”图标，预览单个摄像头\n四、修改时区在使用过程中，发现回放的时间和实际时间有差异，比如今天16号，但回放列表显示今天日期是17号\n[root@nas ~]# docker exec -it Shinobi /bin/bash","tags":"","title":"Docker部署开源摄像头录制软件shinobi","url":"/posts/2021-02-08-docker%E9%83%A8%E7%BD%B2%E5%BC%80%E6%BA%90%E6%91%84%E5%83%8F%E5%A4%B4%E5%BD%95%E5%88%B6%E8%BD%AF%E4%BB%B6shinobinull/"},{"date":"7 February, 2021","subtitle":"1、查看docker默认目录docker info | grep \u0026ldquo;Docker Root Dir\u0026rdquo;\n2、新建或者编辑 daemon.json 文件vim /etc/docker/daemon.json\n{ \u0026ldquo;graph\u0026rdquo;: \u0026ldquo;/mnt/docker\u0026rdquo; }\n3、重启docker服务systemctl restart docker\n4、查看docker目录文件ls /mnt/docker","tags":"","title":"Centos7 修改Docker默认存储位置","url":"/posts/2021-02-07-centos7-%E4%BF%AE%E6%94%B9docker%E9%BB%98%E8%AE%A4%E5%AD%98%E5%82%A8%E4%BD%8D%E7%BD%AE/"},{"date":"2 February, 2021","subtitle":"一、下载安装Docker Toolboxhttps://github.com/docker/toolbox/releases\n二、安装Docker Quickstart Terminal注意：安装完成之后，先不要打开Docker Quickstart Terminal\n三、添加环境变量，替换默认docker machine的存储位置如果不修改，则docker会把镜像默认下载到C盘，导致以后系统盘空间变小\n变量名为：MACHINE_STORAGE_PATH\n如果已安装了default docker虚拟机，需要先删除原来的，再安装到指定位置。参考这篇文章：https://www.cnblogs.com/ginponson/p/8601320.html\n四、打开Docker Quickstart Terminal，初始化环境Running pre-create checks\u0026hellip; (default) Unable to get the latest Boot2Docker ISO release version: Get https:/ /api.github.com/repos/boot2docker/boot2docker/releases/latest: read tcp 172.16.1 00.4:49835-\u0026gt;192.30.255.117:443: wsarecv: An existing connection was forcibly clo sed by the remote host. Creating machine\u0026hellip; (default) Unable to get the latest Boot2Docker ISO release version: Get https:/ /api.github.com/repos/boot2docker/boot2docker/releases/latest: read tcp 172.16.1 00.4:49836-\u0026gt;192.30.255.117:443: wsarecv: An existing connection was forcibly clo sed by the remote host.","tags":"","title":"Windows Server 2012 R2安装docker","url":"/posts/2021-02-02-windows-server-2012-r2%E5%AE%89%E8%A3%85docker/"},{"date":"2 February, 2021","subtitle":"一、下载安装Docker Toolboxhttps://github.com/docker/toolbox/releases\n二、安装Docker Quickstart Terminal注意：安装完成之后，先不要打开Docker Quickstart Terminal\n三、添加环境变量，替换默认docker machine的存储位置如果不修改，则docker会把镜像默认下载到C盘，导致以后系统盘空间变小\n变量名为：MACHINE_STORAGE_PATH\n如果已安装了default docker虚拟机，需要先删除原来的，再安装到指定位置。参考这篇文章：https://www.cnblogs.com/ginponson/p/8601320.html\n四、打开Docker Quickstart Terminal，初始化环境Running pre-create checks\u0026hellip; (default) Unable to get the latest Boot2Docker ISO release version: Get https:/ /api.github.com/repos/boot2docker/boot2docker/releases/latest: read tcp 172.16.1 00.4:49835-\u0026gt;192.30.255.117:443: wsarecv: An existing connection was forcibly clo sed by the remote host. Creating machine\u0026hellip; (default) Unable to get the latest Boot2Docker ISO release version: Get https:/ /api.github.com/repos/boot2docker/boot2docker/releases/latest: read tcp 172.16.1 00.4:49836-\u0026gt;192.30.255.117:443: wsarecv: An existing connection was forcibly clo sed by the remote host.","tags":"","title":"Windows Server 2012 R2安装docker","url":"/posts/2021-02-02-windows-server-2012-r2%E5%AE%89%E8%A3%85dockernull/"},{"date":"1 February, 2021","subtitle":"一、手机上新建目录，用于存放github仓库文件\r二、打开Working Copy，点击右上角加号，选择Setup synced directory\r三、选中第1步新建的目录，点击完成，在弹出的界面中点击左上角的Done\r四、点击Repository-》Create Repository，输入仓库URL地址，取消Allow Push，点击右上角保存\r五、点击右下角指纹按钮，在弹出页面中，点击Fetch，同步仓库文件到本地（第一次可能会失败）\r六、如果同步失败，退出软件，重新打开，进入该仓库，点击Branch，查看分支\r七、选择分支，点击Checkout\r可以看到该分支下所有目录和文件","tags":"","title":"使用Working Copy远程挂载github仓库","url":"/posts/2021-02-01-%E4%BD%BF%E7%94%A8working-copy%E8%BF%9C%E7%A8%8B%E6%8C%82%E8%BD%BDgithub%E4%BB%93%E5%BA%93/"},{"date":"28 January, 2021","subtitle":"域名被DNS污染，手动在hosts文件中添加解析\n199.232.4.133 raw.githubusercontent.com","tags":"","title":"解决raw.github无法访问的问题","url":"/posts/2021-01-28-%E8%A7%A3%E5%86%B3raw-github%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98/"},{"date":"26 January, 2021","subtitle":"命令行中输入：diskperf -y","tags":"","title":"Windows Server 2012/2016 任务管理器增加磁盘监控","url":"/posts/2021-01-26-windows-server-2012-2016-%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8%E5%A2%9E%E5%8A%A0%E7%A3%81%E7%9B%98%E7%9B%91%E6%8E%A7/"},{"date":"16 January, 2021","subtitle":"Win7环境搭建openwrt插件库一、将编译好的插件库拷贝到Win7电脑（只需拷贝以下两个目录）\n/lede/bin/packages/mips_24kc /lede/bin/targets/ar71xx/generic/packages\n我这边拷贝到 F盘openwrt_package文件夹\n二、开启IIS信息服务\n运行中输入 appwiz.cpl，打开程序和功能，点击左上角“打开或关闭Windows功能”\n三、配置网站\n1、运行中输入 inetmgr，打开IIS，点击展开默认网站-》管理网站-》高级设置\n2、修改物理路径为插件库所有目录\n3、启用目录浏览\n4、添加MIME类型\nPS：如果不添加MIME类型，则无法通过网站访问和下载sig和ipk文件，我们也可以将文件扩展名指定为 * 号，允许访问所有类型文件\n5、浏览器访问测试\nhttps://本机IP地址\n6、右键复制mips_24kc和packages目录链接地址，粘贴到文本文档中备用\nhttp://192.168.1.92/packages/ http://192.168.1.92/mips_24kc/\n四、配置openwrt\n1、登录openwrt，进入 系统-》软件包-》配置\n将发行版软件源中的代码注释掉，在每行中添加#号，点击提交\n# src/gz openwrt_core https://mirrors.cloud.tencent.com/lede/snapshots/targets/ar71xx/generic/packages\nsrc/gz openwrt_base https://mirrors.cloud.tencent.com/lede/snapshots/packages/mips_24kc/basesrc/gz openwrt_freifunk https://mirrors.cloud.tencent.com/lede/snapshots/packages/mips_24kc/freifunksrc/gz openwrt_luci https://mirrors.cloud.tencent.com/lede/releases/18.06.8/packages/mips_24kc/lucisrc/gz openwrt_packages https://mirrors.cloud.tencent.com/lede/snapshots/packages/mips_24kc/packagessrc/gz openwrt_routing https://mirrors.cloud.tencent.com/lede/snapshots/packages/mips_24kc/routingsrc/gz openwrt_telephony https://mirrors.cloud.tencent.com/lede/snapshots/packages/mips_24kc/telephony将“发行版软件源”的代码拷贝文本文档，将后面链接替换为自己搭建网站的链接\n将替换后代码，拷贝到“自定义软件源”，点击提交\nsrc/gz openwrt_core http://192.168.1.92/packages/ src/gz openwrt_base http://192.168.1.92/mips_24kc/ base src/gz openwrt_freifunk http://192.168.1.92/mips_24kc/ freifunk src/gz openwrt_luci http://192.168.1.92/mips_24kc/ luci src/gz openwrt_packages http://192.168.1.92/mips_24kc/ packages src/gz openwrt_routing http://192.168.1.92/mips_24kc/ routing src/gz openwrt_telephony http://192.168.1.92/mips_24kc/ telephony","tags":"","title":"Win7搭建Openwrt插件库","url":"/posts/2021-01-16-win7%E6%90%AD%E5%BB%BAopenwrt%E6%8F%92%E4%BB%B6%E5%BA%93/"},{"date":"15 January, 2021","subtitle":"查询当前是否开启了查询日志mysql\u0026gt; show global variables like \u0026lsquo;%general_log%\u0026rsquo;; +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+ | Variable_name | Value | +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+ | general_log | OFF | | general_log_file | D:\\mysql\\data\\LENOVO-LA0X1198.log | +\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;+\n开启查询日志mysql\u0026gt; SET GLOBAL general_log = \u0026lsquo;ON\u0026rsquo;;\n关闭查询日志mysql\u0026gt; SET GLOBAL general_log = \u0026lsquo;OFF\u0026rsquo;;","tags":"","title":"Mysql临时开启查询日志","url":"/posts/2021-01-15-mysql%E4%B8%B4%E6%97%B6%E5%BC%80%E5%90%AF%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97/"},{"date":"14 January, 2021","subtitle":"有时候服务器是Win7系统的时候，远程登录桌面时，即使登录的是不同的管理账号，还是会把远程登录的人给踢下来。即不同的账号只能同时存在一个会话窗。下面教大家如果设置Win7让两个账号的两会话同时存在，且相互之间不冲突。\n下载一个universal termsrv.dll patch。\n链接：http://pan.baidu.com/s/1kV9hirt 密码：jqg2\n第三方工具。解压到文件夹。打开UniversalTermsrvPatch文件夹\u0026mdash;\u0026gt;管理员身份运行UniversalTermsrvPatch-x86.exe文件。\n点击破解，重启后生效，如果重启后还不能多用户登录，则按照原文链接，进行本地组策略设置。\n原文链接：http://www.wuwenhui.cn/4312.html","tags":"","title":"Win7实现多用户同时远程登录","url":"/posts/2021-01-14-win7%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%94%A8%E6%88%B7%E5%90%8C%E6%97%B6%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"},{"date":"13 January, 2021","subtitle":"SpeedTest官方文档：https://www.speedtest.net/apps/cli\n方法一：wget -O speedtest-cli https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py chmod +x speedtest-cli ./speedtest-cli \u0026ndash;share\n方法二：sudo yum install wget wget https://bintray.com/ookla/rhel/rpm -O bintray-ookla-rhel.repo sudo mv bintray-ookla-rhel.repo /etc/yum.repos.d/ sudo yum install speedtest","tags":"","title":"CentOS7使用SpeedTest工具测速","url":"/posts/2021-01-13-centos7%E4%BD%BF%E7%94%A8speedtest%E5%B7%A5%E5%85%B7%E6%B5%8B%E9%80%9F/"},{"date":"7 January, 2021","subtitle":"一、导入ELRepo仓库的公共密钥rpm \u0026ndash;import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\n二、安装EL仓库源rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm\n三、查看可提供升级的内核版本yum \u0026ndash;disablerepo=\u0026quot;*\u0026quot; \u0026ndash;enablerepo=\u0026ldquo;elrepo-kernel\u0026rdquo; list available\n四、升级内核yum \u0026ndash;enablerepo=elrepo-kernel install 包名","tags":"","title":"Centos7 升级内核","url":"/posts/2021-01-07-centos7-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/"},{"date":"7 January, 2021","subtitle":"一、如果系统安装过docker，先卸载sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine\n二、安装依赖包sudo yum install -y yum-utils \\ device-mapper-persistent-data \\ lvm2\n三、添加Docker软件包源sudo yum-config-manager \u0026ndash;add-repo https://download.docker.com/linux/centos/docker-ce.repo\n四、安装Docker CE（社区版）sudo yum install docker-ce docker-ce-cli containerd.io\n五、启动systemctl start docker systemctl enable docker docker info","tags":"","title":"Centos7 安装docker","url":"/posts/2021-01-07-centos7-%E5%AE%89%E8%A3%85docker/"},{"date":"6 January, 2021","subtitle":"一、GitHub 镜像访问最常见GitHub镜像地址：\nhttps://hub.fastgit.org/ https://github.com.cnpmjs.org/ 访问上面的镜像网站，网站的内容跟GitHub是完整同步的镜像，然后在这个网站里面进行下载克隆等操作。\n二、GitHub 文件加速使用非常简单，内有提示！\ngh-proxy开源项目示例演示 听海演示 三、Github 加速下载 Code ZIP GitHub加速下载在线工具：http://toolwa.com/github/ 使用方法： 进入 GitHub 某一项目主页\n点击右侧的绿色按钮 “Code” \u0026gt; “Download ZIP”\n等浏览器弹出下载框后复制下载框中的链接地址并粘贴到以上输入框\n点击加速下载\n四、加速链接 GithubGitHub加速链接生成在线工具：https://github.zhlh6.cn/\n使用方法：\n输入Github仓库地址，使用生成的地址进行git ssh操作即可， 如：git clone 仓库的ssh地址 原理：利用ucloud提供的GlobalSSH功能，对ssh端口协议数据进行加速\n五、谷歌浏览器GitHub加速插件(推荐)插件直接下载安装\n六、GitHub raw 链接加速GitHub raw=raw.githubusercontent.com\n将 raw.githubusercontent.com 替换为 raw.staticdn.net 即可加速。\n七、GitHub + JsDelivrJsDelivr CDN只能加速仓库的静态文件\n参考\nPicGo教程①，GitHub建立属于自己的免费图床 PicGo教程②，配合Typora使用，自动返回远程图床链接 八、通过Gitee中转fork仓库下载1、访问gitee网站： https://gitee.com/ 并登录，在右上角顶部选择“从GitHub/GitLab导入仓库”\n2、在导入页面中粘贴你的Github仓库地址，点击导入即可\n3、等待导入操作完成，然后在导入的仓库中下载浏览对应的该GitHub仓库代码，你也可以点击仓库顶部的“刷新”按钮进行Github代码仓库的同步。\n九、通过修改HOSTS文件进行加速1、手动把CDNip和域名地址绑定。\n访问：http://github.global.ssl.fastly.net.ipaddress.com/#ipinfo 获取CDNip和域名\neg：199.232.69.194 https://github.global.ssl.fastly.net\n访问：https://github.com.ipaddress.com/#ipinfo 获取CDNip和域名\neg：140.82.114.4 http://github.com\n2、修改本地host文件映射上面查找到的IP\n①. 修改C:WindowsSystem32driversetchosts文件的权限，指定可写入：\n右击-\u0026gt;hosts-\u0026gt;属性-\u0026gt;安全-\u0026gt;编辑-\u0026gt;点击Users-\u0026gt;在Users的权限“写入”后面打勾。\n②. 右击-\u0026gt;hosts-\u0026gt;打开方式-\u0026gt;选定记事本（或者你喜欢的编辑器）-\u0026gt;在末尾处添加以下内容：","tags":"","title":"GitHub访问太慢，git clone太慢的9种解决办法","url":"/posts/2021-01-06-github%E8%AE%BF%E9%97%AE%E5%A4%AA%E6%85%A2git-clone%E5%A4%AA%E6%85%A2%E7%9A%849%E7%A7%8D%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"},{"date":"6 January, 2021","subtitle":"一、安装VNCServersudo apt-get install vnc4server\n二、设置密码并运行vncserver（输入命令后输入密码）vncserver\n三、配置xstartup文件修改xstartup文件内容，针对Xfce4桌面环境.\nvim ~/.vnc/xstartup\n#!/bin/sh unset SESSION_MANAGER unset DBUS_SESSION_BUS_ADDRESS startxfce4 \u0026amp; [ -x /etc/vnc/xstartup ] \u0026amp;\u0026amp; exec /etc/vnc/xstartup [ -r $HOME/.Xresources ] \u0026amp;\u0026amp; xrdb $HOME/.Xresources xsetroot -solid grey\n四、重启vncserver修改配置文件后，运行如下命令结束掉之前产生的窗口:1\nvncserver -kill :1\n五、重新启动（reboot系统后，然后启动服务）vncserver\nvnc客户端连接vnc viewer链接新建链接，然后地址输入ip:5901\n注意事项1.防火墙\n2.如果是用了腾讯云或者其他如阿里云等则需要配置安全组放开5901端口\n原文链接：https://blog.csdn.net/hanmingjun/article/details/107122567","tags":"","title":"ubuntu18.04.1 安装配置vnc server","url":"/posts/2021-01-06-ubuntu18-04-1-%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEvnc-server/"},{"date":"4 January, 2021","subtitle":"参考链接：https://www.daocloud.io/mirror\nLinuxcurl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://f1361db2.m.daocloud.io\n该脚本可以将 \u0026ndash;registry-mirror 加入到你的 Docker 配置文件 /etc/docker/daemon.json 中。适用于 Ubuntu14.04、Debian、CentOS6 、CentOS7、Fedora、Arch Linux、openSUSE Leap 42.1，其他版本可能有细微不同。更多详情请访问文档。\n使用前请先确保您的 Docker 版本在 1.8 或更高版本，否则无法使用加速，配置完成后，请根据终端中的提示重启 docker\n国内其它docker镜像源地址docker官方中国区 ：https://registry.docker-cn.com\n网易 ：http://hub-mirror.c.163.com\n网易蜂巢 ：http://hub-mirror.c.163.com\n中国科技大学： https://docker.mirrors.ustc.edu.cn\n阿里云 ：http://\u0026lt;你的ID\u0026gt;.mirror.aliyuncs.com","tags":"","title":"Centos7 修改docker镜像源","url":"/posts/2021-01-04-centos7-%E4%BF%AE%E6%94%B9docker%E9%95%9C%E5%83%8F%E6%BA%90/"},{"date":"29 December, 2020","subtitle":"设置默认启动内核1、查看系统可用内核\n[root@NAS]# awk -F\\\u0026rsquo; \u0026lsquo;$1==\u0026ldquo;menuentry \u0026quot; {print i++ \u0026quot; : \u0026quot; $2}\u0026rsquo; /etc/grub2.cfg\n0 : CentOS Linux (4.4.248-1.el7.elrepo.x86_64) 7 (Core) 1 : CentOS Linux (3.10.0-1160.11.1.el7.x86_64) 7 (Core) 2 : CentOS Linux (3.10.0-957.el7.x86_64) 7 (Core) 3 : CentOS Linux (0-rescue-70b8558dd1bf4abb887cf26344a88da3) 7 (Core) Linux (3.10.0-1127.8.2.el7.x86_64) 7 (Core)\u0026rsquo; \u0026ndash;class centos \u0026ndash;class gnu-linux \u0026ndash;class gnu \u0026ndash;class os \u0026ndash;unrestricted $menuentry_id_option \u0026lsquo;gnulinux-3.10.0-957.el7.x86_64-advanced-31cdfa8e-4bda-4e29-a11e-8e46000798d6\u0026rsquo; {\n2、查看系统开机默认启动内核\n[root@NAS ~]# grub2-editenv list saved_entry=CentOS Linux (3.10.0-1160.11.1.el7.x86_64) 7 (Core)\n3、查看系统当前内核\n[root@NAS ~]# uname -r","tags":"","title":"centos7 设置默认启动内核，并删除多余内核","url":"/posts/2020-12-29-centos7-%E8%AE%BE%E7%BD%AE%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8%E5%86%85%E6%A0%B8%E5%B9%B6%E5%88%A0%E9%99%A4%E5%A4%9A%E4%BD%99%E5%86%85%E6%A0%B8/"},{"date":"19 December, 2020","subtitle":"解决方法：1.进入CSR蓝牙驱动的安装目录，默认是：C:\\Program Files\\CSR\\CSR Harmony Wireless Software Stack；\n2.找到“BLEtokenCredentialProvider.dll”将其删除或重命名即可。\n原文链接：https://blog.csdn.net/guangguang210/article/details/79051550","tags":"","title":"访问共享文件和连接远程桌面时，CSR蓝牙驱动引起的资源管理器崩溃","url":"/posts/2020-12-19-%E8%AE%BF%E9%97%AE%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%92%8C%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E6%97%B6csr%E8%93%9D%E7%89%99%E9%A9%B1%E5%8A%A8%E5%BC%95%E8%B5%B7/"},{"date":"14 December, 2020","subtitle":"一、ASUS华硕路由器开启Openvpn\r二、苹果手机连接OpenVPN1、使用美区APPLE ID登录APP store，搜索OpenVPN，下载应用\n2、将ASUS导出的OpenVPN配置文件，发送到手机，并使用OpenVPN应用打开文件\n3、点击ADD导入配置\n4、输入VPN账号密码\n5、连接成功\n三、PC端连接OpenVPN1、下载安装OpenVPN客户端\nhttps://www.techspot.com/downloads/5182-openvpn.html\n2、打开OpenVPN，在右下角系统托盘，右键导入OpenVPN配置文件\n3、点击连接，输入VPN账号密码\n四、OpenVPN自定义路由方法一：修改客户端配置文件\nroute-nopull # 不从服务端获取路由 route 192.168.1.0 255.255.255.0 net_gateway # 192.168.1.0/24网段，不走vpn网关 route 192.168.2.0 255.255.255.0 vpn_gateway # 192.168.2.0/24网段，走vpn网关\n方法二：修改服务端配置文件\n# 将该以下路由推送到客户端 push \u0026ldquo;route 192.168.1.0 255.255.255.0 net_gateway\u0026rdquo; push \u0026ldquo;route 192.168.2.0 255.255.255.0 vpn_gateway\u0026rdquo;\nPS：如果配置中有 redirect-gateway ，则需要注释掉","tags":"","title":"ASUS华硕路由器开启Openvpn，使用苹果手机连接OpenVPN","url":"/posts/2020-12-14-asus%E5%8D%8E%E7%A1%95%E8%B7%AF%E7%94%B1%E5%99%A8%E5%BC%80%E5%90%AFopenvpn%E4%BD%BF%E7%94%A8%E8%8B%B9%E6%9E%9C%E6%89%8B%E6%9C%BA%E8%BF%9E%E6%8E%A5openvpn/"},{"date":"14 December, 2020","subtitle":"一、ASUS华硕路由器开启Openvpn\r二、苹果手机连接OpenVPN1、使用美区APPLE ID登录APP store，搜索OpenVPN，下载应用\n2、将ASUS导出的OpenVPN配置文件，发送到手机，并使用OpenVPN应用打开文件\n3、点击ADD导入配置\n4、输入VPN账号密码\n5、连接成功\n三、PC端连接OpenVPN1、下载安装OpenVPN客户端\nhttps://www.techspot.com/downloads/5182-openvpn.html\n2、打开OpenVPN，在右下角系统托盘，右键导入OpenVPN配置文件\n3、点击连接，输入VPN账号密码\n四、OpenVPN自定义路由方法一：修改客户端配置文件\nroute-nopull # 不从服务端获取路由 route 192.168.1.0 255.255.255.0 net_gateway # 192.168.1.0/24网段，不走vpn网关 route 192.168.2.0 255.255.255.0 vpn_gateway # 192.168.2.0/24网段，走vpn网关\n方法二：修改服务端配置文件\n# 将该以下路由推送到客户端 push \u0026ldquo;route 192.168.1.0 255.255.255.0 net_gateway\u0026rdquo; push \u0026ldquo;route 192.168.2.0 255.255.255.0 vpn_gateway\u0026rdquo;\nPS：如果配置中有 redirect-gateway ，则需要注释掉","tags":"","title":"ASUS华硕路由器开启Openvpn，使用苹果手机连接OpenVPN","url":"/posts/2020-12-14-asus%E5%8D%8E%E7%A1%95%E8%B7%AF%E7%94%B1%E5%99%A8%E5%BC%80%E5%90%AFopenvpn%E4%BD%BF%E7%94%A8%E8%8B%B9%E6%9E%9C%E6%89%8B%E6%9C%BA%E8%BF%9E%E6%8E%A5openvpnnull/"},{"date":"4 December, 2020","subtitle":"一、安装ffmpeg1、安装epel源\n[root@BK ~]# yum install -y epel-release\n2、安装Nux-Dextop源\n[root@BK ~]# rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm\n3、安装ffmpeg\n[root@BK ~]# yum install -y ffmpeg\n4、查看ffmpeg版本\n[root@BK ~]# ffmpeg -version\n二、使用ffmpeg转换格式并压缩视频使用默认参数转mp4格式\n[root@BK ~]# ffmpeg -i input_video.avi output_video.mp4\n设置输出视频位率为400kbps\n[root@BK ~]# ffmpeg -i input_video.avi -b:v 400k output_video.mp4\n设置输出视频分辨率为600x400\n[root@BK ~]# ffmpeg -i input_video.avi -s 600x400 output_video.mp4","tags":"","title":"Centos7 安装FFmpeg对视频转码压缩","url":"/posts/2020-12-04-centos7-%E5%AE%89%E8%A3%85ffmpeg%E5%AF%B9%E8%A7%86%E9%A2%91%E8%BD%AC%E7%A0%81%E5%8E%8B%E7%BC%A9/"},{"date":"4 December, 2020","subtitle":"1、查看当前磁盘空间使用情况[root@BK ~]# df -h Filesystem Size Used Avail Use% Mounted on devtmpfs 1.8G 0 1.8G 0% /dev tmpfs 1.9G 0 1.9G 0% /dev/shm tmpfs 1.9G 8.9M 1.8G 1% /run tmpfs 1.9G 0 1.9G 0% /sys/fs/cgroup /dev/mapper/centos-root 411G 1.8G 409G 1% / /dev/sda1 1014M 192M 823M 19% /boot /dev/mapper/centos-home 50G 33M 50G 1% /home tmpfs 371M 0 371M 0% /run/user/0\n2、备份/home目录[root@BK ~]# cp -rp /home/ /tmp/\n-r 递归复制该目录下的子目录 -p 将文件和目录具有的权限一同复制","tags":"","title":"Centos7 将home目录和根目录的磁盘空间合并","url":"/posts/2020-12-04-centos7-%E5%B0%86home%E7%9B%AE%E5%BD%95%E5%92%8C%E6%A0%B9%E7%9B%AE%E5%BD%95%E7%9A%84%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E5%90%88%E5%B9%B6/"},{"date":"3 December, 2020","subtitle":" 官方文档：https://docs.microsoft.com/zh-cn/windows-server/administration/windows-commands/forfiles\nforfiles命令：按照通配符或修改日期进行文件搜索，并将搜索结果传给另一个命令进行文件操作\n案例：\n#搜索source目录下，7天以前的avi视频文件，移动到共享目录backup forfiles /p D:\\source /S /M \u0026ldquo;*.avi\u0026rdquo; /d -7 /c \u0026ldquo;cmd /c move @path \\\\192.168.1.10\\backup\u0026rdquo;\n#删除当前目录下，15天前的日志文件 forfiles /p \u0026ldquo;.\u0026rdquo; /s /m *.log /d -15 /c \u0026ldquo;cmd /c del @path\u0026rdquo;\n上面案例用到的参数（不区分大小写）：\n/P pathname 表示开始搜索的路径。默认文件夹是当前工作的目录 (.)。 /M searchmask 根据搜索掩码搜索文件。默认搜索掩码是 '\\*'。 /S 指导 forfiles 递归到子目录。像 \u0026quot;DIR /S\u0026quot;。 /D date 选择文件，其上一次修改日期大于或等于 (+)，或者小于或等于 (-) 用 \u0026quot;yyyy-MM-dd\u0026quot; 格式指定的日期; 或选择文件，其上一次修改日期大于或等于 (+) 当前日期加 \u0026quot;dd\u0026quot; 天，或者小于或等于 (-) 当前 日期减 \u0026quot;dd\u0026quot; 天。有效的 \u0026quot;dd\u0026quot; 天数可以是 0 - 32768 范围内的任何数字。如果没有指定，\u0026quot;+\u0026quot; 被当作默认符号。 /C command 表示为每个文件执行的命令。命令字符串应该用双引号括起来。 默认命令是 \u0026quot;cmd /c echo @file\u0026quot;。下列变量 可以用在命令字符串中: @path - 返回文件的完整路径。 ","tags":"","title":"批处理之forfiles命令","url":"/posts/2020-12-03-%E6%89%B9%E5%A4%84%E7%90%86%E4%B9%8Bforfiles%E5%91%BD%E4%BB%A4/"},{"date":"17 October, 2020","subtitle":"一、安装Elasticsearch1、下载安装包并解压\n[root@ELK ~]# wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.9.2-linux-x86_64.tar.gz [root@ELK ~]# tar xzvf elasticsearch-7.9.2-linux-x86_64.tar.gz -C /usr/local/\n2、创建用户和用户组\nelasticsearch默认不允许使用root用户运行，如果要强行使用root运行，要加上该参数 ./bin/elasticsearch -Des.insecure.allow.root=true\n[root@ELK ~]# useradd es [root@ELK ~]# passwd es [root@ELK ~]# chown -R es:es /usr/local/elasticsearch-7.9.2/\n3、启动elasticsearch\n[root@ELK ~]# su - es [es@ELK ~]# cd /usr/local/elasticsearch-7.9.2/ [es@ELK elasticsearch-7.9.2]$ ./bin/elasticsearch [root@ELK ~]# curl http://127.0.0.1:9200 #测试启动是否成功\n启动出错\n[root@ELK ~]# tail -f /var/log/messages #需要设置es用户的最大打开文件数和最大进程数 [1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65535]","tags":"","title":"Centos7部署ELK日志收集系统","url":"/posts/2020-10-17-centos7%E9%83%A8%E7%BD%B2elk%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9F/"},{"date":"16 October, 2020","subtitle":"问题一、Zabbix server内存溢出，无法启动问题原因：\n这是由于zabbix默认的缓存配置只有8M，当你zabbix正常运行一段时间后，大批量添加一些被监控设备就会出现这种情况。\n解决方法：\n打开zabbix_server.conf文件，将CacheSize改一个较大的值，我现在给自己配的是1024M。\nvim /etc/zabbix/zabbix_server.conf CacheSize=1024M #第385行\n问题二、Zabbix housekeeper processes more than 75% busy\n问题原因：\n由于zabbix每天都会产生大量数据（比如我现在监控项有20K+，每30s-5min每个监控项会产生一条数据，一天会产生非常多数据），为了防止数据库爆炸，zabbix会自动定期清理历史数据（这个历史数据保留时间值你可以在监控项中自己配置），但清理历史数据会影响mysql性能，就会出现上面的报错。\n解决方法：\n这里需要调整两个参数，一个是清理时间间隔、一个是清理的最大删除量。\nvim /etc/zabbix/zabbix_server.conf HousekeepingFrequency=12 #原值是每一小时清理一次，建议改为12或24小时清理一次。第363行 MaxHousekeeperDelete=100000 #原值为每次清理5000条，建议改为上限100000条。 第376行\n问题三、Zabbix poller processes more than 75% busy问题原因：\n这里可能有如下两个原因：\n1、通过Zabbix agent采集数据的设备死机或其他原因导致zabbix agent死掉server获取不到数据。\n2、server向agent获取数据时时间过长，超过了server设置的timeout时间。\n解决方法：\n1、增加zabbix server启动时初始化的进程数量：\nvim /etc/zabbix/zabbix_server.conf StartPollers=12 #第165行，视自己服务器性能改，上限是1000，如果改完发现启不起来可以改小一点。\n2、修改模板自动发现规则中的保留失去的资源期间为0。\n问题四：Zabbix discoverer processes more than 75% busy问题原因：\n看问题报警字面意思是自动发现进程忙碌数超过75%，这是因为我们用的监控模版中带着大量自动发现项，每一个自动发现项都会产生一个进程，所以一般我们添加多台被监控设备时就会出现这样的报错。\n解决办法：\n修改自动发现进程数。\nvim /etc/zabbix/zabbix_server.conf StartDiscoverers=10 #第219行，取掉#号，默认为1，改为10，上限为250请视自己的需求和服务器配置而定\n其次还可以通过执行定期重启server脚本来清理进程，释放内存。\n[root@m01 ~]# grep \u0026lsquo;StartDiscoverers\u0026rsquo; /etc/zabbix/zabbix_server.conf2 3 ### Option: StartDiscoverers4 5 StartDiscoverers=56 7 [root@m01 ~]# systemctl restart zabbix-server.","tags":"","title":"Zabbix调优不完全指南","url":"/posts/2020-10-16-zabbix%E8%B0%83%E4%BC%98%E4%B8%8D%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97/"},{"date":"9 October, 2020","subtitle":"**公司有100多台S1720接入层交换机，没有购买License，只能使用Web界面进行配置，每次进行相同的操作需要花费大量时间，例如：修改密码、保存配置、导出配置、添加日志主机、添加NTP服务器等，**为节省重复且枯燥的操作，编写了下面脚本，操纵浏览器进行自动化配置。\n准备工作1、安装Python\n2、安装谷歌浏览器\n3、下载chromedriver驱动，放到脚本所在目录\n4、新建IP.txt，保存所有交换机IP，放到脚本所在目录\n一、批量修改密码# -*- coding : utf-8 -*-\nfrom selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait import time\nUserName = \u0026lsquo;admin\u0026rsquo; OldPassword = \u0026lsquo;admin@huawei.com\u0026rsquo; NewPassword = \u0026rsquo;newpassword123'\ndef open_broswer(): #新建options options = webdriver.ChromeOptions()\n#添加选项，禁止在控制台打印日志 options.add\\_experimental\\_option('excludeSwitches', \\['enable-logging'\\]) #添加选项，忽略网站SSL证书错误 options.add\\_argument('--ignore-certificate-errors') #载入options并启动浏览器 driver=webdriver.Chrome(options=options) return driver def alert_confirm(): \u0026rsquo;\u0026rsquo;' 解决以下页面弹框提示 Web网管支持的Chrome浏览器版本范围为:Chrome 54 ~ Chrome 66,为了更好的浏览体验,建议您使用Chrome 66版本浏览器 \u0026rsquo;\u0026rsquo;' try: alert = driver.switch_to.alert #切换到弹框窗口 alert.text driver.switch_to.alert.accept() #确认弹框 except: pass\ndef change_password(ip): print(ip) driver.","tags":"","title":"python+selenium 批量配置华为S1720交换机","url":"/posts/2020-10-09-pythonselenium-%E6%89%B9%E9%87%8F%E9%85%8D%E7%BD%AE%E5%8D%8E%E4%B8%BAs1720%E4%BA%A4%E6%8D%A2%E6%9C%BA/"},{"date":"5 October, 2020","subtitle":"一、安装FTP服务1、安装vsftpd软件\n[root@FTP ~]# yum -y install vsftpd\n2、防火墙放行FTP服务\n[root@FTP ~]# firewall-cmd \u0026ndash;permanent \u0026ndash;add-service=ftp\n[root@FTP ~]# firewall-cmd \u0026ndash;reload\n3、启动服务\n[root@FTP ~]# systemctl start vsftpd [root@FTP ~]# systemctl enable vsftpd\n4、测试\n该匿名用户目录位于：/var/ftp/pub/\n二、关闭匿名用户1、修改配置文件\n[root@FTP ~]# vim /etc/vsftpd/vsftpd.conf anonymous_enable=NO\n2、重启服务\n#重启服务 [root@FTP vsftpd]# systemctl restart vsftpd\n3、测试\n三、FTP开启root用户访问（不建议）1、将root从禁止登录列表中移除\n[root@FTP ~]# vim /etc/vsftpd/ftpusers #root\n[root@FTP ~]# vim /etc/vsftpd/user_list #root\n2、关闭selinux\n[root@FTP ~]# setenforce 0\n四、新建用户用于FTP访问1、新建用户\n[root@FTP ~]# useradd test [root@FTP ~]# passwd test","tags":"","title":"Centos7部署FTP服务","url":"/posts/2020-10-05-centos7%E9%83%A8%E7%BD%B2ftp%E6%9C%8D%E5%8A%A1/"},{"date":"5 October, 2020","subtitle":"一、打开事件查看器\n点击 控制面板-\u0026gt; 管理工具 -\u0026gt; 事件查看器，或者在cmd命令行下输入 eventvwr\n二、连接服务器查看日志\n1、菜单栏 -\u0026gt; 操作 -\u0026gt; 连接到另一台计算机\n2、输入服务器IP和账号密码（该账号需要有日志查看权限）\n注意：用户名前面的计算机名称要保留，计算机名称任意即可，\n如果删掉前面计算机名称，确认后会自动带上本机的计算机名称和用户名，导致登录失败\n三、创建自定义视图\n1、在**“操作”菜单上，单击“创建自定义视图”**\n2、选择需要查看的“**日志类型”**和“事件级别”\n3、输入自定义视图名称\n四、重复前面三步，连接服务器并创建视图","tags":"","title":"windows事件查看器 连接多台服务器查看日志","url":"/posts/2020-10-05-windows%E4%BA%8B%E4%BB%B6%E6%9F%A5%E7%9C%8B%E5%99%A8-%E8%BF%9E%E6%8E%A5%E5%A4%9A%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%9F%A5%E7%9C%8B%E6%97%A5%E5%BF%97/"},{"date":"22 September, 2020","subtitle":"可能出现原因：服务端机器，禁用了默认管理员和来宾账户\n例如： 客户端机器当前使用的是administrator账户，访问服务端时，默认是用这个账户来作为用户名登录，但是由于服务端的administrator账号是禁用状态，服务器返回这个账户禁止，客户端不再提示用户输入用户名和密码，直接终止共享访问\n解决办法：方法1：本机建立一个新账户，再通过新账户而不是同名的administrator账户去访问共享服务端就不会出现“登录失败:禁用的当前账户”，会直接提示输入密码 方法2：修改服务器端的访问模式，让everyone都能访问，并启用来宾账户，客户端以guest登录 方法3：客户端打开cmd命令提示符，输入net use \\\\ip\\共享文件夹 /user:用户名，回车后输入密码，再通过\\\\ip就能访问共享文件夹了","tags":"","title":"win7访问共享文件，提示\"登录失败：禁用当前用户\"","url":"/posts/2020-09-22-win7%E8%AE%BF%E9%97%AE%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E6%8F%90%E7%A4%BA%E7%99%BB%E5%BD%95%E5%A4%B1%E8%B4%A5%E7%A6%81%E7%94%A8%E5%BD%93%E5%89%8D%E7%94%A8%E6%88%B7/"},{"date":"23 August, 2020","subtitle":"方式一、MySQL Yum Repository官方安装文档：http://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html\n1、访问官网：https://www.mysql.com/downloads/\n2、点击：MySQL Community (GPL) Downloads »\n3、点击：MySQL Yum Repository，复制下载链接\n4、下载对应操作系统版本的RPM包\n[root@server1 ~]# wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm\n5、安装mysql yum源\n[root@server1 ~]# rpm -ivh mysql80-community-release-el7-3.noarch.rpm\n6、查看当前启用的默认安装版本\n[root@server1 ~]# yum repolist enabled | grep \u0026ldquo;mysql\u0026rdquo;\n如果不是我们需要的版本，则要修改yum仓库文件\n[root@server1 ~]# vim /etc/yum.repos.d/mysql-community.repo\n#将enable设为1，启用需要安装的版本\n7、安装mysql\n[root@server1 ~]# yum install mysql-server\n8、启动mysql\n#centos7启动mysql [root@server1 ~]# systemctl start mysqld [root@server1 ~]# systemctl enable mysqld\n#centos6启动mysql前需要关闭selinux，否则mysql初始化会失败 [root@server1 ~]# setenforce 0 [root@server1 ~]# service mysqld start\n9、查看mysql初始密码\n[root@server1 ~]# grep \u0026rsquo;temporary password\u0026rsquo; /var/log/mysqld.","tags":"","title":"Centos7安装mysql8.0","url":"/posts/2020-08-23-centos7%E5%AE%89%E8%A3%85mysql8-0/"},{"date":"8 August, 2020","subtitle":"效果展示\r实现方式 服务号 订阅号 -》 测试号（本文使用测试号演示） 一、注册微信公众号服务号需要是企业身份，并进行微信认证\n个人可以申请订阅号后，开启测试号获取模板消息接口来进行测试\n二、开通模板消息并设置告警模板服务号：公众号后台-》添加功能-》模板消息\n测试号：\n三、编写Python脚本#!/usr/local/python3/bin/python3\nimport requests import json import sys\ndef get_token(appid, secret): url = \u0026ldquo;https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential\u0026amp;appid=\u0026rdquo; + appid + \u0026ldquo;\u0026amp;secret=\u0026rdquo; + secret response = requests.get(url) ret = response.json() return ret[\u0026lsquo;access_token\u0026rsquo;]\ndef send_message(token): url = \u0026ldquo;https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=\u0026rdquo; + token data = { \u0026ldquo;touser\u0026rdquo;:to_user, \u0026ldquo;template_id\u0026rdquo;:template_id, \u0026ldquo;data\u0026rdquo;:{ \u0026ldquo;keyword1\u0026rdquo;:{ \u0026ldquo;value\u0026rdquo;:event_time, \u0026ldquo;color\u0026rdquo;:\u0026quot;#993399\u0026quot; }, \u0026ldquo;keyword2\u0026rdquo;: { \u0026ldquo;value\u0026rdquo;:host_name, \u0026ldquo;color\u0026rdquo;:\u0026quot;#0099CC\u0026quot; }, \u0026ldquo;keyword3\u0026rdquo;: { \u0026ldquo;value\u0026rdquo;:event_name, \u0026ldquo;color\u0026rdquo;:\u0026quot;#FF0000\u0026quot; } } } data = json.dumps(data) response = requests.","tags":"","title":"Zabbix之使用微信公众号告警","url":"/posts/2020-08-08-zabbix%E4%B9%8B%E4%BD%BF%E7%94%A8%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%91%8A%E8%AD%A6/"},{"date":"30 July, 2020","subtitle":"github地址前后端：https://github.com/water711/Django_echarts_bootstrap\n微信小程序：https://github.com/water711/echarts-keliu-wechat\nPC端效果展示：\r微信小程序端展示\r","tags":"","title":"Django+Echarts+Bootstrap实现数据可视化","url":"/posts/2020-07-30-djangoechartsbootstrap%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"},{"date":"27 July, 2020","subtitle":"datetime是Python处理日期和时间的标准库。\n官方文档：https://docs.python.org/3/library/datetime.html\nfrom datetime import datetime,timedelta\n#获取当前日期时间 now = datetime.now()\n#str转换为datetime mday = datetime.strptime(\u0026lsquo;2020-01-01 12:10:55\u0026rsquo;, \u0026lsquo;%Y-%m-%d %H:%M:%S\u0026rsquo;) print(mday) # 2020-01-01 12:10:55 print(type(mday)) # \u0026lt;class \u0026lsquo;datetime.datetime\u0026rsquo;\u0026gt;\n#datetime转换为str(将字符串格式化为datetime) s = mday.strftime(\u0026rsquo;%Y-%m-%d %H:%M:%S\u0026rsquo;) print(s) # 2020-01-01 12:10:55 print(type(s)) # \u0026lt;class \u0026lsquo;str\u0026rsquo;\u0026gt;\n#datetime加减(需要导入timedelta类) day1 = mday + timedelta(days=2) #2020-01-03 12:10:55 day2 = mday + timedelta(hours=5) #2020-01-01 17:10:55 day3 = mday - timedelta(days=5, hours=6) #2019-12-27 06:10:55\n#打印一年的日期 start_date = datetime.strptime(\u0026lsquo;2019-01-01\u0026rsquo;,\u0026rsquo;%Y-%m-%d\u0026rsquo;) for i in range(0,365): ndate = start_date + timedelta(days=i) ndate = str(ndate).","tags":"","title":"python datetime模块","url":"/posts/2020-07-27-python-datetime%E6%A8%A1%E5%9D%97/"},{"date":"3 July, 2020","subtitle":"1、播放器右键-》选项-》3D视频-》点击安装（H.264 MVC解码）自动打开网页进行下载\n2、安装完解码器后，点击选项-》滤镜-》视频解码器-》选择 FFmpeg.dll","tags":"","title":"解决PotPlayer不支持S/W HEVC(H265)解码","url":"/posts/2020-07-03-%E8%A7%A3%E5%86%B3potplayer%E4%B8%8D%E6%94%AF%E6%8C%81s-w-hevch265%E8%A7%A3%E7%A0%81/"},{"date":"17 June, 2020","subtitle":"来源某国外视频：https://www.bilibili.com/video/BV1E4411f7Q1\n环境Python：3.7.0\nOpenCV：3.4.3.18\n# -*- coding:utf-8 -*-\nimport cv2 import numpy as np import math cap = cv2.VideoCapture(0)\nwhile(1):\nret, frame = cap.read() frame = cv2.flip(frame,1) kernel = np.ones((3,3), np.uint8) # define region of interest roi = frame\\[100:300, 100:300\\] cv2.rectangle(frame,(100,100),(300,300),(0,255,0),0) hsv = cv2.cvtColor(roi, cv2.COLOR\\_BGR2HSV) # define range of skin color in HSV lower\\_skin = np.array(\\[0,20,70\\], dtype=np.uint8) upper\\_skin = np.array(\\[20,255,255\\], dtype=np.uint8) #extract skin color image mask = cv2.inRange(hsv, lower\\_skin, upper\\_skin) #extrapolate the hand to fill dark spots within mask = cv2.","tags":"","title":"使用Python+OpenCV实现手势识别","url":"/posts/2020-06-17-%E4%BD%BF%E7%94%A8pythonopencv%E5%AE%9E%E7%8E%B0%E6%89%8B%E5%8A%BF%E8%AF%86%E5%88%AB/"},{"date":"8 June, 2020","subtitle":"一、注册讯飞开放平台账号1、官网注册：https://www.xfyun.cn/\n2、进入讯飞控制台，创建应用\n3、点击应用，查看APPID、APISecret和APIKey\n二、查看文档，下载DemoWebAPI 文档：https://www.xfyun.cn/doc/asr/voicedictation/API.html\n三、录制音频，并使用ffmpeg转码支持的音频格式\n讯飞音频格式说明：https://www.xfyun.cn/doc/asr/voicedictation/Audio.html\n1、官网下载ffmpeg，windows下载已编译版本\n2、命令行，进入ffmpeg\\bin目录，进行转码\nffmpeg -y -i E:\\audio_test.m4a -acodec pcm_s16le -f s16le -ac 1 -ar 16000 E:\\audio_test.pcm //将m4a格式转为pcm格式\n四、修改demo代码以上代码省略\u0026hellip;\u0026hellip;\nif __name__ == \u0026ldquo;__main__\u0026rdquo;: # 测试时候在此处正确填写相关信息即可运行，填写APPID、APIKey、APISecret和音频路径 time1 = datetime.now() wsParam = Ws_Param(APPID=\u0026lsquo;xxxxxx\u0026rsquo;, APIKey=\u0026lsquo;xxxxxxxxxxxxxxxx\u0026rsquo;, APISecret=\u0026lsquo;xxxxxxxxxxxxxxxxx\u0026rsquo;, AudioFile=r\u0026rsquo;E:\\audio_test.pcm\u0026rsquo;) \u0026hellip;\u0026hellip;\n运行结果\nsid:iat0007f62c@dx17292ff09777a1d802 call success!,data is:[{\u0026ldquo;bg\u0026rdquo;: 53, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;sc\u0026rdquo;: 0, \u0026ldquo;w\u0026rdquo;: \u0026ldquo;富强\u0026rdquo;}]}, {\u0026ldquo;bg\u0026rdquo;: 133, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;sc\u0026rdquo;: 0, \u0026ldquo;w\u0026rdquo;: \u0026ldquo;，\u0026rdquo;}]}, {\u0026ldquo;bg\u0026rdquo;: 133, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;sc\u0026rdquo;: 0, \u0026ldquo;w\u0026rdquo;: \u0026ldquo;民族\u0026rdquo;}]}, {\u0026ldquo;bg\u0026rdquo;: 237, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;w\u0026rdquo;: \u0026ldquo;文明\u0026rdquo;, \u0026ldquo;sc\u0026rdquo;: 0}]}, {\u0026ldquo;bg\u0026rdquo;: 305, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;sc\u0026rdquo;: 0, \u0026ldquo;w\u0026rdquo;: \u0026ldquo;，\u0026rdquo;}]}, {\u0026ldquo;bg\u0026rdquo;: 305, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;w\u0026rdquo;: \u0026ldquo;和谐\u0026rdquo;, \u0026ldquo;sc\u0026rdquo;: 0}]}, {\u0026ldquo;bg\u0026rdquo;: 373, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;w\u0026rdquo;: \u0026ldquo;等\u0026rdquo;, \u0026ldquo;sc\u0026rdquo;: 0}]}, {\u0026ldquo;bg\u0026rdquo;: 425, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;sc\u0026rdquo;: 0, \u0026ldquo;w\u0026rdquo;: \u0026ldquo;24\u0026rdquo;}]}, {\u0026ldquo;bg\u0026rdquo;: 513, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;sc\u0026rdquo;: 0, \u0026ldquo;w\u0026rdquo;: \u0026ldquo;个\u0026rdquo;}]}, {\u0026ldquo;bg\u0026rdquo;: 529, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;w\u0026rdquo;: \u0026ldquo;字\u0026rdquo;, \u0026ldquo;sc\u0026rdquo;: 0}]}, {\u0026ldquo;bg\u0026rdquo;: 549, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;sc\u0026rdquo;: 0, \u0026ldquo;w\u0026rdquo;: \u0026ldquo;叫\u0026rdquo;}]}, {\u0026ldquo;bg\u0026rdquo;: 589, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;sc\u0026rdquo;: 0, \u0026ldquo;w\u0026rdquo;: \u0026ldquo;社会主义\u0026rdquo;}]}, {\u0026ldquo;bg\u0026rdquo;: 685, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;sc\u0026rdquo;: 0, \u0026ldquo;w\u0026rdquo;: \u0026ldquo;核心\u0026rdquo;}]}, {\u0026ldquo;bg\u0026rdquo;: 733, \u0026ldquo;cw\u0026rdquo;: [{\u0026ldquo;sc\u0026rdquo;: 0, \u0026ldquo;w\u0026rdquo;: \u0026ldquo;价值观\u0026rdquo;}]}] sid:iat0007f62c@dx17292ff09777a1d802 call success!","tags":"","title":"Python使用讯飞API进行语音转文字","url":"/posts/2020-06-08-python%E4%BD%BF%E7%94%A8%E8%AE%AF%E9%A3%9Eapi%E8%BF%9B%E8%A1%8C%E8%AF%AD%E9%9F%B3%E8%BD%AC%E6%96%87%E5%AD%97/"},{"date":"7 June, 2020","subtitle":"参考文档：http://c.biancheng.net/view/908.html\n磁盘配额概述1、磁盘配额限制只能作用于普通用户和用户组，超级用户 root 不能做磁盘配额；\n2、磁盘配额限制只能针对分区，不能针对目录，即仅能针对文件系统进行限制，例如 /dev/sda1 挂载到 /home，那么在 /home下的所有目录都会受到磁盘配额的限制；\n3、磁盘配额可以限制用户占用的磁盘容量大小（block），也能限制用户允许占用的文件个数（inode）。\n磁盘配额使用条件1、内核必须支持磁盘配额。Centos 6.x和7.x 版本，默认支持磁盘配额，否则就要重新编译内核，加入 quota supper 功能\n[root@web ~]# grep CONFIG_QUOTA /boot/config-* CONFIG_QUOTA=y CONFIG_QUOTA_NETLINK_INTERFACE=y\nCONFIG_QUOTA_DEBUG is not setCONFIG_QUOTA_TREE=y CONFIG_QUOTACTL=y CONFIG_QUOTACTL_COMPAT=y\n2、如果是分区的文件系统为xfs，则可以使用系统自带的xfs_quota工具来设置，如果为其它文件系统，则需要安装quota\n一、磁盘配额设置（xfs分区）对home目录进行磁盘配额设置\n1、检查/home目录是否为独立的文件系统\n#情况一：下面/home 是独立的文件系统，因此可以直接对其进行限制。但如果/home 不是独立的文件系统，则可能就要针对根目录做磁盘配额了，但不建议大家这样做。 [root@test ~]# df -H Filesystem Size Used Avail Use% Mounted on /dev/mapper/centos-root 19G 1.8G 17G 10% / /dev/sda1 1.1G 171M 894M 16% /boot /dev/sda2 20G 1G 894M 5% /home \u0026hellip;\u0026hellip;\n#情况二：如果home目录，不是独立的文件系统，建议重新分一个区，挂载到home目录下 [root@test ~]# df -H Filesystem Size Used Avail Use% Mounted on /dev/mapper/centos-root 19G 1.","tags":"","title":"Centos7 磁盘配额","url":"/posts/2020-06-07-centos7-%E7%A3%81%E7%9B%98%E9%85%8D%E9%A2%9D/"},{"date":"6 June, 2020","subtitle":"1、主板BISO开启网络唤醒不同的主板，开启的位置可能有所不同\n2、操作系统中网卡开启网络唤醒Windows系统下：\nLinux系统下：\nhttps://jingyan.baidu.com/article/f7ff0bfc33090f2e26bb13f8.html\n查看网卡是否支持网络唤醒\n[root@NAS ~]# ethtool eth0 Supports Wake-on: pumbg //支持唤醒的方式 Wake-on: d //d为关闭唤醒，g为开启唤醒（但是我在真机下，d也能进行网络唤醒）\n[root@NAS ~]# man ethtool p Wake on PHY activity u Wake on unicast messages m Wake on multicast messages b Wake on broadcast messages a Wake on ARP g Wake on MagicPacket™ s Enable SecureOn™ password for MagicPacket™ d Disable (wake on nothing). This option clears all previous options.\n开启网络唤醒\n[root@NAS ~]# ethtool -s eth0 wol g","tags":"","title":"跨公网远程网络唤醒PC","url":"/posts/2020-06-06-%E8%B7%A8%E5%85%AC%E7%BD%91%E8%BF%9C%E7%A8%8B%E7%BD%91%E7%BB%9C%E5%94%A4%E9%86%92pc/"},{"date":"6 June, 2020","subtitle":"1、主板BISO开启网络唤醒不同的主板，开启的位置可能有所不同\n2、操作系统中网卡开启网络唤醒Windows系统下：\nLinux系统下：\nhttps://jingyan.baidu.com/article/f7ff0bfc33090f2e26bb13f8.html\n查看网卡是否支持网络唤醒\n[root@NAS ~]# ethtool eth0 Supports Wake-on: pumbg //支持唤醒的方式 Wake-on: d //d为关闭唤醒，g为开启唤醒（但是我在真机下，d也能进行网络唤醒）\n[root@NAS ~]# man ethtool p Wake on PHY activity u Wake on unicast messages m Wake on multicast messages b Wake on broadcast messages a Wake on ARP g Wake on MagicPacket™ s Enable SecureOn™ password for MagicPacket™ d Disable (wake on nothing). This option clears all previous options.\n开启网络唤醒\n[root@NAS ~]# ethtool -s eth0 wol g","tags":"","title":"跨公网远程网络唤醒PC","url":"/posts/2020-06-06-%E8%B7%A8%E5%85%AC%E7%BD%91%E8%BF%9C%E7%A8%8B%E7%BD%91%E7%BB%9C%E5%94%A4%E9%86%92pcnull/"},{"date":"5 June, 2020","subtitle":"1、安装Apache#安装 [root@web ~]# yum -y install httpd\n#防火墙开放http服务 [root@web ~]# firewall-cmd \u0026ndash;permanent \u0026ndash;add-service=http [root@web ~]# firewall-cmd \u0026ndash;reload\n#新建测试页面 [root@web ~]# echo \u0026ldquo;web page\u0026rdquo; \u0026gt; /var/www/html/index.html\n#启动服务 [root@web ~]# systemctl start httpd [root@web ~]# systemctl enable httpd\n#测试 使用浏览器访问web主机IP\n2、修改网站目录#新建网站目录及页面 [root@web ~]# mkdir /web [root@web ~]# echo \u0026ldquo;new web page\u0026rdquo; \u0026gt; /web/index.html\n#修改主配置文件 [root@web ~]# vim /etc/httpd/conf/httpd.conf //修改以下两处位置 DocumentRoot \u0026ldquo;/web\u0026rdquo; \u0026lt;Directory \u0026ldquo;/web\u0026rdquo;\u0026gt;\n#重启httpd服务 [root@web ~]# systemctl restart httpd\n#关闭selinux [root@web ~]# setenforce 0","tags":"","title":"Centos7 部署Apache服务","url":"/posts/2020-06-05-centos7-%E9%83%A8%E7%BD%B2apache%E6%9C%8D%E5%8A%A1/"},{"date":"5 June, 2020","subtitle":"1、安装bind软件包[root@DNS ~]# yum -y install bind\n2、修改主配置文件，添加正向解析区域[root@DNS ~]# vim /etc/named.conf\noptions { listen-on port 53 { any; }; //将127.0.0.1修改为any listen-on-v6 port 53 { any; }; //将::1修改为any directory \u0026ldquo;/var/named\u0026rdquo;; //区域数据文件默认位置，可以不用修改 \u0026hellip; allow-query { any; }; //将127.0.0.1修改为any\n#在最后面添加正向解析区域 zone \u0026ldquo;test.com\u0026rdquo; { type master; //类型为主要区域 file \u0026ldquo;test.com.zone\u0026rdquo;; //区域数据文件名 };\n3、新建区域数据文件[root@DNS ~]# vim /var/named/test.com.zone @ IN SOA dns root ( 2020060500 1H 15M 1W 1D ) @ IN NS dns dns IN A 192.","tags":"","title":"Centos7部署DNS服务","url":"/posts/2020-06-05-centos7%E9%83%A8%E7%BD%B2dns%E6%9C%8D%E5%8A%A1/"},{"date":"2 June, 2020","subtitle":"场景：电脑挂载多个硬盘做NAS，硬盘大部分时间为待机状态（不使用），为节约电费，有必要设置硬盘休眠\n1、安装硬盘性能测试/设置工具\n[root@NAS ~]# yum -y install hdparm\n[root@NAS ~]# hdparm \u0026ndash;help\n参数说明： -S\u0026lt;时间\u0026gt; 设定硬盘进入省电模式前的等待时间（关闭旋转电机） -y 使IDE硬盘进入省电模式 -Y 使IDE硬盘进入睡眠模式 -C 检测IDE硬盘的电源管理模式 -f 将内存缓冲区的数据写入硬盘，并清楚缓冲区 -i 显示硬盘的硬件规格信息，这些信息是在开机时由硬盘本身所提供 -I 直接读取硬盘所提供的硬件规格信息 -t 评估硬盘的读取效率 -T 评估硬盘快取的读取效率\n2、使硬盘立即进入省电状态\n[root@NAS ~]# hdparm -Y /dev/sda\nPS：可以配合crontab来设置定时休眠\n3、设置硬盘省电策略\n无访问一定时间后自动停转，关闭旋转电机\n[root@NAS ~]# hdparm -S 10 /dev/sda\n//这里-S取值为10，则为50秒 换算关系为：1 = 5秒\nPS：在centos7下测试，发现有时候硬盘不会自动休眠\n4、查看当前硬盘省电状态\n[root@NAS ~]# hdparm -C /dev/sda\n//active：活动状态 //standby 省电状态\n5、使用crontab定期执行硬盘休眠\n[root@NAS ~]# crontab -e */1 * * * * /usr/sbin/hdparm -Y /dev/sda \u0026gt; /dev/null","tags":"","title":"Linux下设置硬盘自动休眠省电","url":"/posts/2020-06-02-linux%E4%B8%8B%E8%AE%BE%E7%BD%AE%E7%A1%AC%E7%9B%98%E8%87%AA%E5%8A%A8%E4%BC%91%E7%9C%A0%E7%9C%81%E7%94%B5/"},{"date":"2 June, 2020","subtitle":"参考文章链接：https://www.cnblogs.com/sun51586/p/10497538.html\n准备：\n一个u盘，并制作老毛桃winpe启动盘\n下载centos7 mini版本。（注意：因为dvd版本大于4g，一般fat格式的u盘无法存放，如果格式化为NTFS，则centos镜像无法识别）\n安装中常见错误 ，如下图：\n1，Warning: /dev/root does not exist!\n2，Warning: no suitable images\n还有一些其它错误 ，不知是何原因，遇到时请重试几次。不知是老毛桃制作的启动盘有问题，还是u盘有问题，还是电脑有问题。总之多试几次是可以的。\n-\n安装步骤：\n1、制作老毛桃PE启动U盘，将下载centos7的iso文件复制到u盘的/LMT目录\n2、从u盘启动电脑，选择“启动自定义ISO/IMG文件”\n3、选择“自动搜索并列出LMT目录下所有文件”\n4、选中镜像文件，回车\n5、选中“Install CentOS 7”，按Tab键，修改启动命令后，回车\n\u0026gt; vmlinuz initrd=initrd.img linux dd quiet\n6、出现下图界面面，找到vfat文件格式的设备，记下设备名称（我这里是sdb1）\n7、重启电脑，按前面步骤回到第5步界面，选中“Install CentOS 7”,按Tab键，修改启动命令后，回车\nPS：/dev/sdb1为U盘设备路径，LMT为存放镜像的目录\n\u0026gt; vmlinuz initrd=initrd.img inst.stage2=hd:/dev/sdb1:/LMT/ quiet\n8、完成上述步骤后，就能进入系统安装界面","tags":"","title":"老毛桃PE以ISO镜像模式安装CentOS7","url":"/posts/2020-06-02-%E8%80%81%E6%AF%9B%E6%A1%83pe%E4%BB%A5iso%E9%95%9C%E5%83%8F%E6%A8%A1%E5%BC%8F%E5%AE%89%E8%A3%85centos7/"},{"date":"2 June, 2020","subtitle":"参考文章链接：https://www.cnblogs.com/sun51586/p/10497538.html\n准备：\n一个u盘，并制作老毛桃winpe启动盘\n下载centos7 mini版本。（注意：因为dvd版本大于4g，一般fat格式的u盘无法存放，如果格式化为NTFS，则centos镜像无法识别）\n安装中常见错误 ，如下图：\n1，Warning: /dev/root does not exist!\n2，Warning: no suitable images\n还有一些其它错误 ，不知是何原因，遇到时请重试几次。不知是老毛桃制作的启动盘有问题，还是u盘有问题，还是电脑有问题。总之多试几次是可以的。\n-\n安装步骤：\n1、制作老毛桃PE启动U盘，将下载centos7的iso文件复制到u盘的/LMT目录\n2、从u盘启动电脑，选择“启动自定义ISO/IMG文件”\n3、选择“自动搜索并列出LMT目录下所有文件”\n4、选中镜像文件，回车\n5、选中“Install CentOS 7”，按Tab键，修改启动命令后，回车\n\u0026gt; vmlinuz initrd=initrd.img linux dd quiet\n6、出现下图界面面，找到vfat文件格式的设备，记下设备名称（我这里是sdb1）\n7、重启电脑，按前面步骤回到第5步界面，选中“Install CentOS 7”,按Tab键，修改启动命令后，回车\nPS：/dev/sdb1为U盘设备路径，LMT为存放镜像的目录\n\u0026gt; vmlinuz initrd=initrd.img inst.stage2=hd:/dev/sdb1:/LMT/ quiet\n8、完成上述步骤后，就能进入系统安装界面","tags":"","title":"老毛桃PE以ISO镜像模式安装CentOS7","url":"/posts/2020-06-02-%E8%80%81%E6%AF%9B%E6%A1%83pe%E4%BB%A5iso%E9%95%9C%E5%83%8F%E6%A8%A1%E5%BC%8F%E5%AE%89%E8%A3%85centos7null/"},{"date":"1 June, 2020","subtitle":"1、插入带有NTFS文件格式的硬盘，并查看硬盘设备路径\n[root@NAS ~]# lsblk //列出所有块设备，会显示所有分区大小\n如果上面命令查看不出哪个是新插增硬盘，可使用下面命令\n[root@NAS ~]# fdisk -l //列出所有分区表，包含分区大小及文件系统\n2、安装NTFS分区的的驱动\n[root@NAS ~]# yum -y install ntfs-3g\n3、挂载NTFS格式分区\n[root@NAS ~]# mount /dev/sda1 /mnt/disk1","tags":"","title":"Centos 挂载NTFS硬盘分区","url":"/posts/2020-06-01-centos-%E6%8C%82%E8%BD%BDntfs%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA/"},{"date":"1 June, 2020","subtitle":"参考：https://blog.51cto.com/oyang/1107753\n1、打开虚拟机，选择“编辑虚拟机设置”\n2、弹出“虚拟机设置”窗口，点击“添加”\n3、弹出“添加硬件向导”，选择“硬盘”，点击“下一步”\n4、选择需要添加的磁盘，点击“下一步”\n5、选择添加U盘的序号，点击“下一步”\n注：如果不清楚哪个序号为U盘，可以通过“我的电脑”-\u0026gt;“管理”-\u0026gt;“磁盘管理”来查看序号\n6、点击“完成”\n7、选择“完成”后，可查看添加的信息是否准备，最后点击“确定”\n8、启动虚拟机并进入BIOS\n9、选择“BOOT”，在Hard Drive处回车，通过“-/+”移动新添加硬盘到最前面，按F10保存\n10、自动重启后，从U盘启动PE系统","tags":"","title":"VMware 虚拟机设置启动U盘PE","url":"/posts/2020-06-01-vmware-%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%AE%BE%E7%BD%AE%E5%90%AF%E5%8A%A8u%E7%9B%98pe/"},{"date":"1 June, 2020","subtitle":"参考：https://blog.51cto.com/oyang/1107753\n1、打开虚拟机，选择“编辑虚拟机设置”\n2、弹出“虚拟机设置”窗口，点击“添加”\n3、弹出“添加硬件向导”，选择“硬盘”，点击“下一步”\n4、选择需要添加的磁盘，点击“下一步”\n5、选择添加U盘的序号，点击“下一步”\n注：如果不清楚哪个序号为U盘，可以通过“我的电脑”-\u0026gt;“管理”-\u0026gt;“磁盘管理”来查看序号\n6、点击“完成”\n7、选择“完成”后，可查看添加的信息是否准备，最后点击“确定”\n8、启动虚拟机并进入BIOS\n9、选择“BOOT”，在Hard Drive处回车，通过“-/+”移动新添加硬盘到最前面，按F10保存\n10、自动重启后，从U盘启动PE系统","tags":"","title":"VMware 虚拟机设置启动U盘PE","url":"/posts/2020-06-01-vmware-%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%AE%BE%E7%BD%AE%E5%90%AF%E5%8A%A8u%E7%9B%98penull/"},{"date":"31 May, 2020","subtitle":"环境 Python 3.7 Windows 7 X64 （windows并不是官方支持的，但也许也能用） 官方文档 https://github.com/ageitgey/face_recognition/blob/master/README_Simplified_Chinese.md 一、安装第三方库及相关依赖1、安装Visual Studio Build Tools（因为cmake依赖C++），安装时选择“C++生成工具”\n2、安装Cmake（因为dlib库需要cmake编译）\npip3 install cmake\n3、安装face_recognition和dlib\npip3 install face_recognition\n//安装安装face_recognition会自动安装dlib，如果安装下载时，多次超时中断，可以到PyPI上下载安装包（xxx.whl）或源码包（xxx.tar.gz），离线进行安装。\npip install dlib-19.19.0.whl 或 pip3 install dlib-19.19.0.tar.gz\n二、face_recognition 命令行工具![](http://hugo.caizhenwei.top//cf190ebbc1c551c0d40f36fcc5549d24.png)\nface_recognition - 在单张图片或一个图片文件夹中认出是谁的脸。\n#将A.png图片到known文件夹中去辨认出是谁的脸 F:\\face\u0026gt;face_recognition ./known ./check/A.png ./check/A.png,刘德华\n#将check目录中的人脸，逐个到known目录中辨认出是谁的脸 F:\\face\u0026gt;face_recognition ./known ./check ./check\\A.png,刘德华 ./check\\B.jpg,刘亦菲 ./check\\C.png,刘亦菲 //识别错误\n#调整人脸识别的容错率 #通过传入参数 \u0026ndash;tolerance 来实现这个功能，默认的容错率是0.6，容错率越低，识别越严格准确。 F:\\face\u0026gt;face_recognition \u0026ndash;tolerance 0.5 ./known ./check ./check\\A.png,刘德华 ./check\\B.jpg,刘亦菲 ./check\\C.png,unknown_person\n三、将网络摄像头画面中的人脸进行打码（需要安装OpenCV）参考：https://github.com/ageitgey/face_recognition/blob/master/examples/blur_faces_on_webcam.py\n安装opencv\npip3 install opencv-python\nimport face_recognition import cv2\nThis is a demo of blurring faces in video.","tags":"","title":"Python人脸识别库Face Recognition","url":"/posts/2020-05-31-python%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E5%BA%93face-recognition/"},{"date":"31 May, 2020","subtitle":"环境 Python 3.7 Windows 7 X64 （windows并不是官方支持的，但也许也能用） 官方文档 https://github.com/ageitgey/face_recognition/blob/master/README_Simplified_Chinese.md 一、安装第三方库及相关依赖1、安装Visual Studio Build Tools（因为cmake依赖C++），安装时选择“C++生成工具”\n2、安装Cmake（因为dlib库需要cmake编译）\npip3 install cmake\n3、安装face_recognition和dlib\npip3 install face_recognition\n//安装安装face_recognition会自动安装dlib，如果安装下载时，多次超时中断，可以到PyPI上下载安装包（xxx.whl）或源码包（xxx.tar.gz），离线进行安装。\npip install dlib-19.19.0.whl 或 pip3 install dlib-19.19.0.tar.gz\n二、face_recognition 命令行工具![](images/cf190ebbc1c551c0d40f36fcc5549d24.png)\nface_recognition - 在单张图片或一个图片文件夹中认出是谁的脸。\n#将A.png图片到known文件夹中去辨认出是谁的脸 F:\\face\u0026gt;face_recognition ./known ./check/A.png ./check/A.png,刘德华\n#将check目录中的人脸，逐个到known目录中辨认出是谁的脸 F:\\face\u0026gt;face_recognition ./known ./check ./check\\A.png,刘德华 ./check\\B.jpg,刘亦菲 ./check\\C.png,刘亦菲 //识别错误\n#调整人脸识别的容错率 #通过传入参数 \u0026ndash;tolerance 来实现这个功能，默认的容错率是0.6，容错率越低，识别越严格准确。 F:\\face\u0026gt;face_recognition \u0026ndash;tolerance 0.5 ./known ./check ./check\\A.png,刘德华 ./check\\B.jpg,刘亦菲 ./check\\C.png,unknown_person\n三、将网络摄像头画面中的人脸进行打码（需要安装OpenCV）参考：https://github.com/ageitgey/face_recognition/blob/master/examples/blur_faces_on_webcam.py\n安装opencv\npip3 install opencv-python\nimport face_recognition import cv2\nThis is a demo of blurring faces in video.","tags":"","title":"Python人脸识别库Face Recognition","url":"/posts/2020-05-31-python%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E5%BA%93face-recognitionnull/"},{"date":"22 May, 2020","subtitle":"**场景：**适配不同的手机屏幕尺寸，让元素始终位于屏幕中央\n效果图：\n一、index.wxml 二、index.wxss.container{ display:flex; justify-content: center; align-items: center; }\n.box{ height:80px; width:80px; background-color:blue; }\n三、index.js/** * 生命周期函数\u0026ndash;监听页面加载 */ onLoad: function(options) { var that = this; wx.getSystemInfo({ success(res) { console.log(\u0026lsquo;可使用窗口高度:\u0026rsquo;, res.windowHeight) that.setData({ windowHeight: res.windowHeight }) } }) },","tags":"","title":"微信小程序动态修改样式","url":"/posts/2020-05-22-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9%E6%A0%B7%E5%BC%8F/"},{"date":"9 May, 2020","subtitle":"1、安装python、nginx、django和uwsgi[root@server ~]# yum -y install python3 nginx gcc [root@server ~]# pip3 install django==2.0\n[root@liyu ~]# python3 -V Python 3.6.8 [root@liyu ~]# yum install python36-devel //安装对应Python版本的devel，编译uwsgi需要的依赖\n[root@server ~]# pip3 install uwsgi\n2、创建django项目[root@server ~]# mkdir /web/ [root@server ~]# cd /web/ [root@server ~]# django-admin startproject test_project\n#允许所有主机访问 [root@server ~]# cd test_project/ [root@server test_project]# vim test_project/settings.py ALLOWED_HOSTS = [\u0026rsquo;*\u0026rsquo;]\n#开发环境下，可以直接使用下面命令来运行项目 [root@server ~]# python3 manage.py runserver 0.0.0.0:8000\n3、使用uwsgi启动django项目#uwsgi命令行方式直接启动（测试） [root@web test_project]# uwsgi \u0026ndash;http :8000 \u0026ndash;module test_project.wsgi //test_project.","tags":"","title":"使用uWSGI和Nginx来部署基于Django的Web服务器","url":"/posts/2020-05-09-%E4%BD%BF%E7%94%A8uwsgi%E5%92%8Cnginx%E6%9D%A5%E9%83%A8%E7%BD%B2%E5%9F%BA%E4%BA%8Edjango%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"date":"8 May, 2020","subtitle":"1、下载源码wget https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tgz tar xf Python-3.8.2.tgz cd Python-3.8.2/\n2、安装编译所需依赖yum install -y gcc openssl-devel zlib-devel libffi-devel sqlite-devel\n3、编译./configure prefix=/usr/local/python3 make -j8 \u0026amp;\u0026amp; make install\n#如果gcc版本\u0026gt;=8.1.0，在编译时可以添加优化选项\u0026ndash;enable-optimizations ./configure prefix=/usr/local/python3 \u0026ndash;enable-optimizations make -j8 \u0026amp;\u0026amp; make install\n4、将python的bin目录添加到环境变量export PATH=$PATH:/usr/local/python3/bin/ echo export PATH=$PATH:/usr/local/python3/bin/ \u0026raquo; /etc/profile","tags":"","title":"Centos7源码安装python3","url":"/posts/2020-05-08-centos7%E5%AE%89%E8%A3%85python3/"},{"date":"22 April, 2020","subtitle":"方法一、使用命令添加配置\u0026gt; pip config set global.index-url http://pypi.douban.com/simple/ Writing to C:\\Users\\admin\\AppData\\Roaming\\pip\\pip.ini\npip config set install.trusted-host pypi.douban.com Writing to C:\\Users\\admin\\AppData\\Roaming\\pip\\pip.ini\n方法二：修改全局配置文件Windows： C:\\Users\\用户名\\AppData\\Roaming\\pip\\pip.ini\nLinux： ~/.pip/pip.conf\n[global] index-url = http://pypi.douban.com/simple\n[install] trusted-host = pypi.douban.com","tags":"","title":"添加pip全局配置，使用国内下载源","url":"/posts/2020-04-22-%E6%B7%BB%E5%8A%A0pip%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E4%B8%8B%E8%BD%BD%E6%BA%90/"},{"date":"11 April, 2020","subtitle":"$ pipenv install Traceback (most recent call last): File \u0026ldquo;d:\\python37\\lib\\runpy.py\u0026rdquo;, line 193, in _run_module_as_main \u0026ldquo;__main__\u0026rdquo;, mod_spec) \u0026hellip;\u0026hellip; File \u0026ldquo;d:\\python37\\lib\\site-packages\\pipenv\\vendor\\shellingham\\nt.py\u0026rdquo;, line 78, in _iter_process info = {\u0026rsquo;executable\u0026rsquo;: str(pe.szExeFile.decode(\u0026lsquo;utf-8\u0026rsquo;))} UnicodeDecodeError: \u0026lsquo;utf-8\u0026rsquo; codec can\u0026rsquo;t decode byte 0xcc in position 0: invalid continuation byte\n解决方法：\n在报错信息里，找到报错的文件及代码位置\n我这边的文件是d:\\python37\\lib\\site-packages\\pipenv\\vendor\\shellingham\\nt.py，代码位置在第78行\ninfo = {\u0026rsquo;executable\u0026rsquo;: str(pe.szExeFile.decode(\u0026lsquo;utf-8\u0026rsquo;))}\n修改为\ninfo = {\u0026rsquo;executable\u0026rsquo;: str(pe.szExeFile.decode(\u0026lsquo;gbk\u0026rsquo;))}","tags":"","title":"window使用pipenv install出现UnicodeDecodeError","url":"/posts/2020-04-11-window%E4%BD%BF%E7%94%A8pipenv-install%E5%87%BA%E7%8E%B0unicodedecodeerror/"},{"date":"29 March, 2020","subtitle":"Python版本：3.7\n浏览器：Chrome 79.0.3\n一、下载Selenium浏览器驱动（WebDriver）下载地址：http://npm.taobao.org/mirrors/chromedriver/\n（下载与浏览器版本对应的驱动，并将驱动放到python程序所在目录）\n二、获取网站cookie1、chrome浏览器安装第三方扩展EditThisCookie\n2、手动输入账号密码登录网站，使用EditThisCookie导出cookies\n3、将cookie（列表）转换成json文件\n# -*- coding : utf-8 -*- import json\ncookies = [ { \u0026ldquo;domain\u0026rdquo;: \u0026ldquo;.51cto.com\u0026rdquo;, \u0026ldquo;name\u0026rdquo;: \u0026ldquo;gr_user_id\u0026rdquo;, \u0026ldquo;value\u0026rdquo;: \u0026ldquo;ea0dbdab-1233-4454-a237-1ba0bd7c406e\u0026rdquo;, \u0026ldquo;id\u0026rdquo;: 1 }, { \u0026ldquo;domain\u0026rdquo;: \u0026ldquo;.51cto.com\u0026rdquo;, \u0026ldquo;name\u0026rdquo;: \u0026ldquo;Hm_lpvt_110fc9b2e1cae4d110b7959ee4f27e3b\u0026rdquo;, \u0026ldquo;value\u0026rdquo;: \u0026ldquo;168979366982\u0026rdquo;, \u0026ldquo;id\u0026rdquo;: 2 }, \u0026hellip;\u0026hellip; ]\nwith open(\u0026ldquo;cookie.json\u0026rdquo;, \u0026ldquo;w\u0026rdquo;) as f: json.dump(cookies,f) print(\u0026ldquo;已保存为json文件\u0026hellip;\u0026rdquo;)\n三、使用cookie自动登录网站from selenium import webdriver import json\n#打开浏览器 driver = webdriver.Chrome()\n#访问网址 driver.get(\u0026ldquo;https://www.51cto.com/\")\n#最大化浏览器窗口 driver.maximize_window()\n#从json文件中载入cookie,并转换回列表 with open(\u0026lsquo;cookie.json\u0026rsquo;, \u0026lsquo;r\u0026rsquo;) as f: cookies = json.","tags":"","title":"Python+Selenium 使用cookie实现自动登录网站","url":"/posts/2020-03-29-pythonselenium-%E4%BD%BF%E7%94%A8cookie%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E7%BD%91%E7%AB%99/"},{"date":"23 March, 2020","subtitle":"一、配置Fiddler允许远端设备连接Tools-\u0026gt; Options-\u0026gt;Connections，勾选\u0026quot;Allow remote computers to connect\u0026quot; （修改后需重启Fiddler）\n二、配置抓取https请求Tools-\u0026gt; Options-\u0026gt;Connections，勾选\u0026quot;Capture HTTPS CONNECTs\u0026quot;、\u0026ldquo;Decrypt HTTPS traffic\u0026rdquo;\n三、手机设置代理IPIP和端口号为Fiddler所在电脑的IP和Fiddler端口号\n四、手机安装根证书1、苹果手机使用自带Safari浏览器，打开http://IP:8888\n五、手机设置信任证书设置-\u0026gt;通用-\u0026gt;关于本机-\u0026gt;证书信任设置","tags":"","title":"配置Fiddler实现苹果手机抓包","url":"/posts/2020-03-23-%E9%85%8D%E7%BD%AEfiddler%E5%AE%9E%E7%8E%B0%E8%8B%B9%E6%9E%9C%E6%89%8B%E6%9C%BA%E6%8A%93%E5%8C%85/"},{"date":"2 March, 2020","subtitle":"将data:image/base64转换成图片import base64\nvalue=\u0026ldquo;qeBQAAAABJ\u0026hellip;\u0026hellip;RU5ErkJggg==\u0026rdquo; #填写base64编码 img = base64.b64decode(value) fh = open(\u0026ldquo;pic.jpg\u0026rdquo;,\u0026ldquo;wb\u0026rdquo;) fh.write(img)\n将图片转换成data:image/base64import base64\nwith open(\u0026ldquo;pic.jpg\u0026rdquo;,\u0026ldquo;rb\u0026rdquo;) as f: base64_data = base64.b64encode(f.read()) print(base64_data)\nbase64编码iVBORw0KGgoAAAANSUhEUgAAAH4AAAB+CAMAAADV/VW6AAAC91BMVEUAAACgekagekagekagekagekagekagekagekagekagekagekagekagekagekb//v7//v6he0f+/v7+/f3t5dvp39Ojfkyqh1j7+fb28u308Or+/fz59/T59vL07+i/pYH+/f39/Pv8+/n49vHx6+Lv6eHo39LZybTSv6bOup/Ap4TQvqS/poPOup6vjmL9/Pv8+/n7+ff7+fbz7ujw6uLv6eDr49jj18jl2szh1MPTwane0L3YybPGr5C5nXb//v77+ff59/Py7eXs5Nrl2szp4NTh1cTh1cS5nXetjWClgU/49fH39PD18ezVxK7Rv6WujmGtjF/9/Pv8+/r6+Pbg08LHsZL8+/n9/Pv49vL7+fb28u3///+duvaat/OcufWWs++kwf2rxv+YtfGiv/uUse2RruqgvfmZtvKwyf+PrOifvPiMqeWNquaOq+eoxP+mw/+tx/+Vsu6TsOy1zf+JpuKLqOSuyP+QremKp+Oyy/+IpeGHpOD9/f/k7P3u9P77/P/8+vejvvX9/PmlwPfj6/y8z/f5+/+gu/P68u7p7/u0yvf89PD75Of09/7w9f24z/3L2/v79vL56+m4zv/3+f7P3fvB0/qnwvnX4vikvve5zfXp8P3m7v3b5vzf6PvX4/vF1vq5zvepwfX9+PT76ej34eL319/7/P7J2Pm80Pmvx/jI1/Wxx/XgyfL58Oz46Ob43eL2y93xxtu80f/Dzf/y9v7S4Pupw/itxPS3vPGkuvH10PDEvO3uyOXnweDYt9n9/v/r8f2lwPnS3vesvfa/0fTQxPKtuvL50/Cdt+6js+v73ujXwOj1zOfNt+GdqN+1rd3ivNzOtNu6zP/Iyv2zy/yow/vZzPq4zPbszvL77On70ufPvOfnxOWmruTcvuHvxd+hqN7hvNq7rNrlvNnIzf6xwvvgzvnIxfflzfW3yvKzx++lve6qtu7wzOuZr+n72eicrOT24+OOpuHFs9+Upt+KpN+rqt320NyzuO26sN/XuNpRZOGQAAAAXHRSTlMAAgYKFQ4RHyMbFyctKjH++jP284SBNijVs6Lvyb+qNfHu4smTjYtkWVZJRkRDLOfm2NKypJiPe2xjXFlPOzH73NOZlX51dF8/PDLDvb1gUTkx7OrNak/r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","tags":"","title":"data:image/base64与图片互相转换","url":"/posts/2020-03-02-dataimage-base64%E4%B8%8E%E5%9B%BE%E7%89%87%E4%BA%92%E7%9B%B8%E8%BD%AC%E6%8D%A2/"},{"date":"24 February, 2020","subtitle":"一、申请阿里云免费SSL证书2021阿里云SSL免费证书购买地址又变了，为了解决免费证书近期存在的吊销、统计等问题，自2021年起，免费证书申请将切换到证书资源包下。\n1、 打开阿里云SSL证书选购页面，点击“选购证书”\n2、 商品类型选择“云盾证书资源包”\n3、 资源包规格选择“免费证书扩容包”\n4、 资源包个数选择“20”\n选择完毕后总配置费用为0元，然后点“立即购买”支付0元即可。\n二、控制台证书申请1、登录到SSL证书管理控制台\n2、 选择左侧栏”证书资源包“\n3、点击“证书申请”\n4、下载证书\n证书绑定域名：填写你要申请SSL的域名，如www.xxx.com\n域名验证方式：如果你的域名在本账号下，可以选择自动DNS验证，阿里云系统会为你的域名添加_dnsauth的TXT解析记录；如果域名不在本账号下，可以选择手工DNS验证或文件验证。详细教程参考：阿里云SSL证书申请域名验证选择及操作流程\n联系人：填写联系人信息，可以新建也可以选择之前保存的\n所在地：根据实际情况选择即可\nCSR生成方式：CSR文件是您的公钥证书原始文件，包含了您的服务器信息和您的单位信息，需要提交给CA认证中心审核。建议默认即可，使用系统创建的CSR，避免因内容不正确而导致的审核失败。\n三、Nginx服务器上安装证书1、创建cert目录，将下载的证书文件和密钥文件拷贝到cert目录\n[root@server ~]# mkdir /etc/nginx/cert\n2、修改虚拟主机配置文件\nserver { listen 80; server_name www.xxxx.com; root /data/web/; location / { index index.html index.htm; } }\nserver { listen 443 ssl; server_name www.xxxx.com; root /data/web/; index index.html index.htm; ssl_certificate /etc/nginx/cert/www.xxxx.com.pem; ssl_certificate_key /etc/nginx/cert/www.xxxx.com.key; ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; location / { index index.","tags":"","title":"申请阿里云免费SSL证书并部署至Nginx服务器","url":"/posts/2020-02-24-%E7%94%B3%E8%AF%B7%E9%98%BF%E9%87%8C%E4%BA%91%E5%85%8D%E8%B4%B9ssl%E8%AF%81%E4%B9%A6%E5%B9%B6%E9%83%A8%E7%BD%B2%E8%87%B3nginx%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"date":"19 February, 2020","subtitle":"环境：服务端操作系统：Centos7\n客户端操作系统：Centos7、Win7\n一、NPS介绍nps是一款轻量级、高性能、功能强大的内网穿透代理服务器。目前支持tcp、udp流量转发，可支持任何tcp、udp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还支持内网http代理、内网socks5代理、p2p等，并带有功能强大的web管理端。\ngithub文档：https://github.com/ehang-io/nps/blob/master/README_zh.md\n二、阿里云ECS安装NPS服务端1、下载对应系统的软件压缩包\ngithub地址：https://github.com/ehang-io/nps/releases\n[root@ECS ~]# wget https://github.com/cnlh/nps/releases/download/v0.25.3/linux_amd64_server.tar.gz [root@ECS ~]# tar xvf linux_amd64_server.tar.gz -C nps_server/\n2、修改NPS配置文件\n[root@ECS ~]# vim nps_server/conf/nps.conf appname = nps runmode = dev bridge_type=tcp\nbridge_port=8074 #服务端客户端通信端口 bridge_ip=0.0.0.0 public_vkey=123 #客户端以配置文件模式启动时的密钥 log_level=7 web_username=admin #web界面管理账号 web_password=aassdd #web界面管理密码 web_port = 8811 #web管理端口 web_ip=0.0.0.0\n官方配置参数详细说明：https://ehang-io.github.io/nps/#/server_config\n3、安装并启动服务端\n首先前台启动，查看是否能正常运行\n./nps start\n前台运行成功后（ctrl+C 关闭），执行安装操作\n./nps install #安装后，web前端和配置文件位于/etc/nps/目录下,主程序在/usr/bin/nps\n4、阿里云ECS配置安全组策略（端口放行）\n放行NPS通信端口\n放行web管理端口\n三、配置windows客户端转发3389端口流量1、浏览器访问NPS前端页面：http://域名或IP : 端口\n2、新增客户端\n点击客户端列表前面的+号，展开详细内容，查看客户端连接命令\n3、下载nps客户端软件 ，解压后进入cmd命令行，运行连接命令\n下载地址：https://github.com/ehang-io/nps/releases（注意版本要与服务端一致，否则可能会连接失败）\n4、注册到系统服务，开机自动启动\nnpc install -server=www.xxx.com:8074 -vkey=trr2r53jtqj8q2q -type=tcp","tags":"","title":"阿里云ECS搭建NPS内网穿透服务","url":"/posts/2020-02-19-%E9%98%BF%E9%87%8C%E4%BA%91ecs%E6%90%AD%E5%BB%BAnps%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1/"},{"date":"18 February, 2020","subtitle":"一、开通腾讯云短信服务（需要实名认证）官方文档：https://cloud.tencent.com/document/product/382/18071\n二、创建短信模板\r短信模板内容中：{1}{2}{3}为发送信息时，需要传递的参数内容\n三、编写发送短信的Shell脚本官方API接口文档：https://cloud.tencent.com/document/product/382/5976\n#!/bin/sh\ntime=`date +%s` appkey=bada123234534590d23403\nappid=123456789 random=$(($RANDOM*$RANDOM)) tem_id=123456 #模板ID\nmobile=$1 #手机号，从zabbix传入的第一个参数 message=$2 #告警信息，从zabbix传入的第二个参数 IFS=\u0026rsquo;;\u0026rsquo; #定义内部分隔符 arr=($message) #将message转化为数组，按;号分隔 event_time=${arr[0]} host_name=${arr[1]} event_name=${arr[2]}\nstr=\u0026ldquo;appkey=$appkey\u0026amp;random=$random\u0026amp;time=$time\u0026amp;mobile=$mobile\u0026rdquo; #腾讯定义的sig字段格式 sig=`echo -n $str | sha256sum | awk \u0026lsquo;{print $1}\u0026rsquo;` #加密后的sig字段\ncurl -i -X POST -H \u0026ldquo;\u0026lsquo;Content-type\u0026rsquo;:\u0026lsquo;application/json\u0026rsquo;\u0026rdquo; \\ -d \u0026lsquo;{ \u0026ldquo;ext\u0026rdquo;: \u0026ldquo;\u0026rdquo;, \u0026ldquo;extend\u0026rdquo;: \u0026ldquo;\u0026rdquo;, \u0026ldquo;params\u0026rdquo;: [\u0026quot;\u0026rsquo;$event_time\u0026rsquo;\u0026quot;, \u0026ldquo;\u0026rsquo;$host_name\u0026rsquo;\u0026rdquo;, \u0026ldquo;\u0026rsquo;$event_name\u0026rsquo;\u0026rdquo;], \u0026ldquo;sig\u0026rdquo;: \u0026ldquo;\u0026rsquo;$sig\u0026rsquo;\u0026rdquo;, \u0026ldquo;sign\u0026rdquo;: \u0026ldquo;xx公司\u0026rdquo;, \u0026ldquo;tel\u0026rdquo;: {\u0026ldquo;mobile\u0026rdquo;: \u0026ldquo;\u0026rsquo;$mobile\u0026rsquo;\u0026rdquo;, \u0026ldquo;nationcode\u0026rdquo;: \u0026ldquo;86\u0026rdquo;}, \u0026ldquo;time\u0026rdquo;: \u0026lsquo;$time\u0026rsquo;, \u0026ldquo;tpl_id\u0026rdquo;: \u0026lsquo;$tem_id\u0026rsquo; }\u0026rsquo; \\ https://yun.tim.qq.com/v5/tlssmssvr/sendsms?sdkappid=$appid'\u0026'random=$random\n测试运行","tags":"","title":"Zabbix使用腾讯云短信进行告警","url":"/posts/2020-02-18-zabbix%E9%80%9A%E8%BF%87%E7%9F%AD%E4%BF%A1%E5%91%8A%E8%AD%A6/"},{"date":"16 February, 2020","subtitle":"Oracle官方11g安装文档：https://docs.oracle.com/cd/E11882_01/install.112/e24326/toc.htm\n一、下载对应Oracle安装包1、查看操作系统硬件架构类型\n[root@server ~]# uname -m x86_64\n2、官网下载对应安装包\nhttps://www.oracle.com/database/technologies/oracle-database-software-downloads.html#11g\n二、安装oracle所需依赖软件包#64位系统yum默认不安装32位的包，修改yum.conf，同时安装32和64位包，安装完记得还原配置 [root@server ~]# echo \u0026lsquo;multilib_policy=all\u0026rsquo; \u0026raquo; /etc/yum.conf\n[root@server ~]# yum install \\ binutils* \\ compat-libcap* \\ compat-libstdc* \\ compat-libstdc* \\ gcc* \\ gcc-c++* \\ glibc* \\ ksh \\ libaio* \\ libgcc* \\ libstdc* \\ libXi* \\ libXtst* \\ make* \\ sysstat* \\ unixODBC* \\ elfutils-libelf*\n三、创建Oracle用户、组和安装目录[root@server ~]# groupadd oinstall [root@server ~]# groupadd dba [root@server ~]# useradd -g oinstall -G dba oracle [root@server ~]# passwd oracle","tags":"","title":"CentOS7安装Oracle 11g数据库","url":"/posts/2020-02-16-centos7%E5%AE%89%E8%A3%85oracle-11g%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"date":"14 February, 2020","subtitle":"准备环境Linux系统：Centos7\nSSH客户端工具：Putty和XShell\nXming下载地址： https://sourceforge.net/projects/xming/\nX Window System介绍：http://cn.linux.vbird.org/linux_basic/0590xwindow_1.php\n一、Windows下安装Xming软件（X Server）安装运行后，在右下角系统托盘下查看并记录下Xming Server冒号后面数字\n二、CentOS7安装X11（X Client）[root@client ~]# yum -y install xorg-x11-xauth\n三、配置XShell转发Linux图形界面右键点击会话属性\n选择SSH-\u0026gt;隧道，勾选“转发X11连接到（X），选择“X DISPLAY(D)”，输入localhost:0.0 （0.0为Windows右下角Xming后面数字）\n使用XShell连接Centos7，运行带有图形化界面的软件\n[root@client ~]# firefox\n四、配置Putty转发Linux图形界面打开Putty，点击Connection-\u0026gt;SSH-\u0026gt;X11，勾选“启用X11转发”,X display location输入localhost:0.0 （0.0为Windows右下角Xming后面数字）\n使用XShell连p接Centos7，运行带有图形化界面的软件\n[root@client ~]# firefox","tags":"","title":"Windows下使用ssh转发Linux下x11图形界面","url":"/posts/2020-02-14-windows%E4%B8%8B%E4%BD%BF%E7%94%A8ssh%E8%BD%AC%E5%8F%91linux%E4%B8%8Bx11%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/"},{"date":"10 February, 2020","subtitle":"一、准备实验环境1、安装ENSP模拟器 v1.3.00.100\n2、物理机安装环回接口/网卡（运行：hdwwiz，运行硬件向导，环回网卡IP设置为192.168.0.10/24）\nhttps://jingyan.baidu.com/article/046a7b3eef6d69f9c27fa9ea.html\n3、ENSP连接物理机环回网卡\nhttps://jingyan.baidu.com/article/6f2f55a10ff227b5b93e6c02.html\n二、实验配置1、添加防火墙USG6000，修改防火墙默认密码（原密码Admin@123，修改后admin@123）\nUsername:admin Password:Admin@123 The password needs to be changed. Change now? [Y/N]: y Please enter old password: Admin@123 Please enter new password: admin@123 Please confirm new password: admin@123\n2、防火墙管理接口开放ping、http、https访问\n#防火墙1管理接口开放ping、http、https [FW1]interface g0/0/0 [FW1-GigabitEthernet0/0/0]service-manage http permit [FW1-GigabitEthernet0/0/0]service-manage https permit [FW1-GigabitEthernet0/0/0]service-manage ping permit\n3、ENSP添加Cloud，Cloud绑定物理机环回接口，并连接防火墙g0/0/0接口\n使用浏览器访问防火墙管理页面：https://192.168.0.1:8443/\n4、添加两台路由器，模拟运营商网络\n#电信路由器 [china telecom]interface g0/0/0 [china telecom-GigabitEthernet0/0/0]ip address 101.1.1.1 30\n#联通路由器 [china unicom]interface g0/0/0 [china unicom-GigabitEthernet0/0/0]ip address 202.1.1.1 30\n5、配置外网IP地址（这里模拟接入两个运营商专线，GE1/0/6连接电信，GE1/0/5连接联通）","tags":"","title":"华为防火墙多运营商出口智能选路","url":"/posts/2020-02-10-%E4%BD%BF%E7%94%A8ensp%E6%A8%A1%E6%8B%9F%E5%A4%9A%E8%BF%90%E8%90%A5%E5%95%86%E5%87%BA%E5%8F%A3%E6%99%BA%E8%83%BD%E9%80%89%E8%B7%AF/"},{"date":"15 January, 2020","subtitle":"1、打开以下目录（win7系统）C:\\Users\\admin\\AppData\\Local\\Youdao\\YNote\\bgImage-10\n2、复制v开头的图片，修改文件名为c-xx.png也可使用画图工具或PS，自定义图片颜色，拷贝到该目录，修改文件名为c-xx.png\n3、打开有道云笔记，在视图中选择纸张背景\r","tags":"","title":"有道云笔记修改笔记背景","url":"/posts/2020-01-15-%E6%9C%89%E9%81%93%E4%BA%91%E7%AC%94%E8%AE%B0%E4%BF%AE%E6%94%B9%E7%AC%94%E8%AE%B0%E8%83%8C%E6%99%AF/"},{"date":"8 January, 2020","subtitle":"一、Zabbix服务端添加主机\r#zabbix客户端在主动模式下，服务端接收数据需要开放10051端口 [root@zabbix1 ~]# firewall-cmd \u0026ndash;zone=public \u0026ndash;add-port=10051/tcp \u0026ndash;permanent success [root@zabbix1 ~]# firewall-cmd \u0026ndash;reload success\n二、安装 zabbix客户端1、查看zabbix服务端版本\n[root@zabbix1 ~]# zabbix_server -V zabbix_server (Zabbix) 4.2.6\n2、官网下载zabbix客户端并解压（和服务端版本一致）\n地址：https://www.zabbix.com/cn/download_agents#tab:42\n3、修改zabbix客户端配置文件\n./conf/zabbix_agentd.confLogFile=D:\\Program Files\\zabbix_agents-4.2.6\\zabbix_agentd.log #指定日志文件路径 Server=192.168.1.250 #zabbix服务端IP ListenPort=10250 #监听端口，默认为10050 ServerActive=192.168.1.250 #主动模式的ServerIP地址(agent主动上报数据到该服务器) 4、启动zabbix客户端\n\u0026gt; D:\ncd D:\\Program Files\\zabbix_agents-4.2.6\\bin #进入agents\\bin目录\nzabbix_agentd.exe -f -c \u0026ldquo;D:\\Program Files\\zabbix_agents-4.2.6\\conf\\zabbix_agentd.conf\u0026rdquo; #-f 前台运行 -c 指定配置文件 Starting Zabbix Agent [test]. Zabbix 4.2.6 (revision d3bb18bbc4). Press Ctrl+C to exit.\n服务端查看主机agent是否连接成功\n5、将zabbix客户端添加为系统服务\n\u0026gt; D:\ncd D:\\Program Files\\zabbix_agents-4.2.6\\bin #进入agents\\bin目录","tags":"","title":"Zabbix监控windows日志","url":"/posts/2020-01-08-zabbix%E7%9B%91%E6%8E%A7windows%E6%97%A5%E5%BF%97/"},{"date":"4 January, 2020","subtitle":"一、编写备份脚本#!/usr/bin/bash\ndate=`date +%Y-%m-%d` #该变量用于备份文件命名 ftp_user=test ftp_pwd=\u0026lsquo;123456\u0026rsquo; ftp_ip=172.16.10.10\nfile_name=wp_$date.sql #数据库备份文件名 tar_file_name=wp_$date.tar.gzip #打包压缩后文件名\nmysqldump -utest -p123456 \u0026ndash;single-transaction \u0026ndash;triggers \u0026ndash;routines wordpress \u0026gt; $file_name #备份数据库 tar -czvf $tar_file_name $file_name \u0026ndash;remove-files #打包压缩备份文件，并删除源文件\n#由于FTP服务器不支持ssl，所以要关闭ssl，否则连接后会卡在“making data connection” lftp -e \u0026ldquo;set ftp:ssl-allow off;\u0026rdquo; $ftp_user:$ftp_pwd@$ftp_ip \u0026laquo;EOF cd Backup put ./$tar_file_name bye EOF\n二、配置定时任务[root@server]# systemctl status crond #查看计划任务服务是否正常运行\n[root@server]# crontab -e #编辑定时任务 0 1 * * * /bin/bash /task/backup.sh # 每天1点整执行备份脚本","tags":"","title":"Linux定时备份数据库并上传FTP服务器","url":"/posts/2020-01-04-linux%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B9%B6%E4%B8%8A%E4%BC%A0ftp%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"date":"3 January, 2020","subtitle":"域服务器：192.168.1.130\nRemote App服务器：192.168.1.130\n服务器操作系统：Windows Server 2012 R2\n一、搭建域环境1、安装域服务（添加角色和功能-\u0026gt;勾选 Active Directory域服务器）\n2、安装完成后，点击“将此服务器提升为域控制器”\n3、添加新林\n4、输入目录服务还原密码（需要满足密码复杂度要求）\n5、提示无法创建DNS委派，忽略，下一步\n6、默认，下一步\n7、指定AD DS数据库、日志和SYSVOL存放路径\n8、点击安装\n二、安装远程桌面服务1、添加角色和功能-\u0026gt;勾选“远程桌面服务安装”\n2、选择快速启动（正式环境会选择标准部署，将RD连接代理、RDWeb访问以及RD会话主机部署在不同服务器上）\n3、选择基于会话的桌面部署\n4、钩选 允许自动重新服务器，点击部署\n远程桌面服务安装完成后，默认有120天的试用时间\n三、为Remote App添加程序1、点击“远程桌面服务”\n2、点击QuickSessionCollection-\u0026gt;任务-\u0026gt;发布RemoteApp程序\n3、勾选你要发布到RemoteApp的程序\n四、远程访问RemoteApp的程序1、客户端机器修改hosts文件，将域控制器的根域名、和FQDN完全限定域名（主机名+域名）和解析到域服务器/RemoteApp服务器IP地址\n#win7 hosts文件路径 C:\\Windows\\System32\\drivers\\etc\\hosts 192.168.1.130 test.com 192.168.1.130 WIN-71CA1NGO1FG.test.com\n2、客户端机器使用浏览器访问 https://192.168.1.130/RDWeb，输入域用户和密码\n3、登录后，点击需要使用的应用，输入域用户和密码\n启动服务器程序成功","tags":"","title":"微软Remote App实现应用程序虚拟化","url":"/posts/2020-01-03-%E5%BE%AE%E8%BD%AFremote-app%E5%AE%9E%E7%8E%B0%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E8%99%9A%E6%8B%9F%E5%8C%96/"},{"date":"2 January, 2020","subtitle":"一、准备环境1、安装Oracle 客户端（python、oracle客户端的位数要一致）\n2、安装Python第三方模块\npip3 install cx_Oracle xlsxwriter\n**cx_Oracle模块：**一个允许访问Oracle数据库并符合Python数据库API规范的模块。该模块目前针对Oracle客户端19c、18c、12c和11.2以及Python2.7、3.5、3.6、3.7和3.8进行了测试。\n**xlsxwriter模块：**编写Excel 2007+XLSX文件格式文件，可用于将文本、数字和公式写入多个工作表，并支持格式、图像、图表、页面设置、自动筛选、条件格式和许多其他功能。\n二、编写代码# -*- coding: utf-8 -*-\nimport time import smtplib import cx_Oracle import xlsxwriter from email.mime.text import MIMEText from email.mime.multipart import MIMEMultipart from email.mime.application import MIMEApplication\ndef send_mail(): from_addr = \u0026ldquo;12345678@qq.com\u0026rdquo; #发件人 pwd = \u0026ldquo;zjjeiuwpaynojhgsdf\u0026rdquo; #授权码/密码 to_addr = \u0026ldquo;87654321@qq.com\u0026rdquo; #收件人\nmsg = MIMEMultipart() #实例化对象 msg\\[\u0026quot;Subject\u0026quot;\\] = \u0026quot;销售报表\u0026quot; #主题 msg\\[\u0026quot;From\u0026quot;\\] = from\\_addr msg\\[\u0026quot;To\u0026quot;\\] = to\\_addr part1 = MIMEText(\u0026quot;这里是邮件内容\u0026quot;) msg.attach(part1) # 添加附件 part2 = MIMEApplication(open(date + \u0026quot;.","tags":"","title":"pthon3实现oracle数据库查询、导出EXCEL并邮件发送","url":"/posts/2020-01-02-pthon3%E5%AE%9E%E7%8E%B0oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E5%AF%BC%E5%87%BAexcel%E5%B9%B6%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81/"},{"date":"2 January, 2020","subtitle":"场景：通过windows计划任务，执行数据库备份脚本（批处理文件），每天定时备份数据库问题：手动执行备份脚本，数据库是备份到脚本所在目录，但是通过计划任务执行脚本，数据库备份到了C:\\Windows\\System32目录下解决方法：在计划任务执行程序或脚本下面，超始于（可选）选项中，指定程序所在目录","tags":"","title":"windows计划任务，执行程序后，生成的文件不在程序所在目录","url":"/posts/2020-01-02-windows%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F%E5%90%8E%E7%94%9F%E6%88%90%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8D%E5%9C%A8%E7%A8%8B%E5%BA%8F%E6%89%80/"},{"date":"31 December, 2019","subtitle":"一、下载并安装Oracle Database官网地址：https://www.oracle.com/technetwork/cn/database/enterprise-edition/downloads/index.html\n1、下载解压后，右键setup.exe，以管理员身份运行\n2、电子邮件可不填\n3、这里跳过软件更新\n4、我这里选择仅安装数据库软件（安装后再手动配置数据库），也可以选第一项在安装时创建数据库\n5、选择 单实例数据库安装\n6、选择语言\n7、我这里选择标准版\n8、输入安装目录\n9、执行安装\n10、安装完成\n二、创建数据库1、在D盘下创建oradata和orats目录\n2、进行D:\\app\\Administrator\\product\\11.2.0\\dbhome_1\\BIN\\目录，右键以管理员身份运行dbca.bat\n3、默认选择“创建数据库”\n4、默认选择“一般用途或事务处理”\n5、输入数据库名和SID\n6、取消勾选“配置Enterprise Manager”，下一步\n7、输入管理口令\n8、选择数据库文件存放位置\n9、取消勾选“指定快速恢复区”\n10、默认不勾选“示例方案”，下一步\n11、指定分配给该数据库的内存大小\n12、调整最大连接进程数\n13、选择Unicode字符集\n14、修改日志大小和日志成员\n15、点击完成\n16、核对概要信息后，点击确定，开始创建\n三、配置Oracle Net Services1、进行D:\\app\\Administrator\\product\\11.2.0\\dbhome_1\\BIN\\目录，右键以管理员身份运行netca.bat\n2、默认选择”监听程序配置“\n3、监听程序名，默认即可\n4、网络协议，默认TCP\n5、监听的端口号，默认1521\n6、是否配置另一个监听程序，选择“否”\n7、完成配置\n8、查看监听程序状态\nC:\\Users\\Administrator\u0026gt;lsnrctl status\n正在连接到 (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=WIN-71CA1NGO1FG)(PORT=1521))) LISTENER 的 STATUS别名 LISTENER 版本 TNSLSNR for 64-bit Windows: Version 11.2.0.4.0 - Production 启动日期 30-12月-2019 21:41:23 正常运行时间 0 天 0 小时 59 分 1 秒 跟踪级别 off 安全性 ON: Local OS Authentication SNMP OFF 监听程序参数文件 D:\\app\\Administrator\\product\\11.","tags":"","title":"oracle安装、授权、备份和恢复","url":"/posts/2019-12-31-oracle%E5%AE%89%E8%A3%85%E6%8E%88%E6%9D%83%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/"},{"date":"26 December, 2019","subtitle":"需要搭建的服务：DHCP 服务器：配置为需要对 PXE 客户端请求进行响应的 DHCP 服务器或 DHCP 代理。 PXE 服务器：运行 TFTP 服务的服务器，可托管客户端将下载的 Windows PE 启动文件。 文件服务器：托管网络文件共享的服务器。\n（实际环境中，可以把上述服务部署在一台服务器上）\n一、配置DHCP服务[root@PXE ~]# yum -y install dhcp\n[root@PXE ~]# vim /etc/dhcp/dhcpd.conf subnet 192.168.142.0 netmask 255.255.255.0 { range 192.168.142.100 192.168.142.200; next-server 192.168.142.241; #tftp-server 本机IP filename \u0026ldquo;pxelinux.0\u0026rdquo;; #指向的是ttp-server的根目录/var/lib/ftpboot\n[root@PXE ~]# dhcpd #检测语法 [root@PXE ~]# systemctl restart dhcpd [root@PXE ~]# systemctl enable dhcpd\n客户端机器从网卡启动测试：\n二、配置TFTP服务[root@PXE ~]# yum -y install tftp-server [root@PXE ~]# yum -y install syslinux #操作系统的引导加载程序","tags":"","title":"使用PXE网络引导安装Linux和windows系统","url":"/posts/2019-12-26-%E4%BD%BF%E7%94%A8pxe%E7%BD%91%E7%BB%9C%E5%BC%95%E5%AF%BC%E5%AE%89%E8%A3%85linux%E5%92%8Cwindows%E7%B3%BB%E7%BB%9F/"},{"date":"21 December, 2019","subtitle":"博客原本部署在阿里云虚拟主机上，今年双11，购买了一台阿里云ECS服务器，现在开始做迁移\n一、备份网站空间及数据库二、阿里云ECS部署LNMP环境#安装nginx和mariadb [root@ecs]# yum -y install nginx mariadb mariadb-server [root@ecs]# systemctl start nginx mariadb [root@ecs]# systemctl enable nginx mariadb\n#EPEL源的php版本较低，安装第三方源 [root@ecs]# rpm -Uvh https://mirror.webtatic.com/yum/el7/epel-release.rpm [root@ecs]# rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n[root@ecs]# yum -y install php56w php56w-fpm php56w-mysql php56w-gd [root@ecs]# systemctl start php-fpm [root@ecs]# systemctl enable php-fpm\n#把nginx主配置文件的server段注释掉 [root@ecs]# vim /etc/nginx/nginx.conf\nserver {listen 80 default_server;listen [::]:80 default_server;server_name _;root /usr/share/nginx/html;# Load configuration files for the default server block.include /etc/nginx/default.d/*.conf;location / {}\u0026hellip;\u0026hellip;.}} #配置nginx虚拟主机 [root@ecs]# vim /etc/nginx/conf.","tags":"","title":"Wordpress网站迁移","url":"/posts/2019-12-21-wordpress%E7%BD%91%E7%AB%99%E8%BF%81%E7%A7%BB/"},{"date":"25 November, 2019","subtitle":"Python代码：# -*- coding:utf-8 -*-\nimport threading import subprocess import time from queue import Queue import xlrd import msvcrt\n定义工作线程WORD_THREAD = 50\n将从excel表中读取ip并加入队列IP_QUEUE = Queue() workbook = xlrd.open_workbook(\u0026ldquo;IP.xls\u0026rdquo;) table = workbook.sheets()[0]\nfor row in range(1, table.nrows): ip = table.cell(row, 0).value name = table.cell(row, 1).value IP_QUEUE.put([ip,name])\n定义一个执行 ping 的函数def ping_ip(): while not IP_QUEUE.empty(): ip = IP_QUEUE.get() res = subprocess.call(\u0026lsquo;ping -n 2 -w 5 %s\u0026rsquo; % ip[0],stdout=subprocess.PIPE) # linux 系统将 \u0026lsquo;-n\u0026rsquo; 替换成 \u0026lsquo;-c\u0026rsquo; # 打印运行结果 # print(ip[0],True if res == 0 else False) if res == 0: print(ip[0],ip[1],\u0026ldquo;有响应\u0026rdquo;) else: print(ip[0],ip[1],\u0026ldquo;无响应\u0026rdquo;) ip.","tags":"","title":"python 从文件读取IP地址 并实现多线程扫描","url":"/posts/2019-11-25-python-%E4%BB%8E%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96ip%E5%9C%B0%E5%9D%80-%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%89%AB%E6%8F%8F/"},{"date":"4 November, 2019","subtitle":"python27版本，使用pip安装包，报错 Could not install packages due to an EnvironmentError: [Errno 0]\n重装python后，并将pip更新到最新版本，还是报错\n弄了一晚上，结果发现是之前修改了cmd命令行窗口的默认编码，导致安装包失败\nC:\\Users\\admin\u0026gt;pip install opencv-python\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python n\u0026rsquo;t be maintained after that date. A future version of pip will drop support for Python 2.7. More detail support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-sup Collecting opencv-python WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connecti adTimeoutError(\u0026ldquo;HTTPSConnectionPool(host=\u0026lsquo;files.","tags":"","title":"windows下使用pip安装包失败，提示Could not install packages due to an EnvironmentError: [Errno 0] Error","url":"/posts/2019-11-04-windows%E4%B8%8B%E4%BD%BF%E7%94%A8pip%E5%AE%89%E8%A3%85%E5%8C%85%E5%A4%B1%E8%B4%A5%E6%8F%90%E7%A4%BAcould-not-install-packages-due-to-an-environmenterror-errno-0-error/"},{"date":"29 October, 2019","subtitle":"一、安装OpenCV打开OpenCV官网，下载对应系统的opencv，并解压到任意位置\n解压./opencv/build/java目录下有以下文件\n二、Eclipse加载OpenCV库官方配置文档：https://docs.opencv.org/2.4/doc/tutorials/introduction/java_eclipse/java_eclipse.html\n1、启动eclipse并从菜单中选择 Window –\u0026gt; Preferences\n在左边导航窗口选择 Java –\u0026gt; Build Path –\u0026gt; User Libraries，点击New，并为你的library输入一个名称，例如：OpenCV-4.1.1\n2、选中新建的user libraries，点击 Add External JARs\u0026hellip;\n选择opencv的jar包\n3、选中 Native library location，点击Edit\n4、选择对应opencv库文件所在文件夹，32位系统选择X86，64位系统选择X64\n现在已经配置好opencv了，下面新建一个java项目，测试一下opencv是否能正常使用\n三、新建项目测试OpenCVEclipse新建项目后，右键项目，点击 Build Path–\u0026gt;Add Libraries\u0026hellip;\n选择User Library\n勾选opencv\n创建一个新的Java文件，使用以下代码运行测试：\nimport org.opencv.core.Core; import org.opencv.core.CvType; import org.opencv.core.Mat;\npublic class opencvTest { public static void main( String[] args ) { System.loadLibrary( Core.NATIVE_LIBRARY_NAME ); Mat mat = Mat.eye( 3, 3, CvType.CV_8UC1 ); System.out.println( \u0026ldquo;mat = \u0026quot; + mat.","tags":"","title":"JAVA使用opencv通过RTSP流打开摄像头","url":"/posts/2019-10-29-java%E4%BD%BF%E7%94%A8opencv%E9%80%9A%E8%BF%87rtsp%E6%B5%81%E6%89%93%E5%BC%80%E6%91%84%E5%83%8F%E5%A4%B4/"},{"date":"24 October, 2019","subtitle":"一、什么是jar包jar包就是别人已经写好的一些类，然后将这些类进行打包，你可以将这些jar包引入你的项目中，然后就可以直接使用这些jar包中的类和属性以及方法。\n二、如何下载jar包 包所在的官网下载 百度或谷歌，搜索包名 第三方jar包仓库下载（例如：https://mvnrepository.com/） 三、Eclipse如何使用jar包1、在项目下，新建lib目录，把jar包拷贝到该目录\n2、选择项目，右键点击jar包 -\u0026gt; Build Path -\u0026gt; Add to Build Path","tags":"","title":"Eclipse中使用jar包","url":"/posts/2019-10-24-eclipse%E4%B8%AD%E4%BD%BF%E7%94%A8jar%E5%8C%85/"},{"date":"13 October, 2019","subtitle":"一、查看系统时区/时间#方法一： [root@server1 ~]# timedatectl Local time: Tue 2019-09-17 05:14:47 CST Universal time: Mon 2019-09-16 21:14:47 UTC //世界协调时间 RTC time: Sun 2019-10-13 06:17:36 //BIOS硬件时钟(Real Time Clock） Time zone: Asia/Shanghai (CST, +0800) //时区 NTP enabled: n/a //是否启用NTP服务 NTP synchronized: no //NTP时间是否已同步 RTC in local TZ: no //BIOS硬件时间是否与系统时间同步 DST active: n/a\n#方法二： [root@server1 ~]# date Sun Oct 13 14:40:33 CST 2019\n二、设置系统时区[root@server1 ~]# timedatectl set-timezone Asia/Shanghai //设置时区为上海东8区\n[root@server1 ~]# timedatectl list-timezones //列出所有时区\n三、设置系统时间#方法一： [root@server1 ~]# timedatectl set-time \u0026ldquo;2019-10-13 14:32:35\u0026rdquo;","tags":"","title":"Centos7设置系统时间/时区","url":"/posts/2019-10-13-centos7%E8%AE%BE%E7%BD%AE%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4-%E6%97%B6%E5%8C%BA/"},{"date":"6 October, 2019","subtitle":"源代码import cv2,os\nurl = \u0026lsquo;rtsp://192.168.104.130/user=admin\u0026amp;password=admin\u0026amp;channel=1\u0026rsquo; cap = cv2.VideoCapture(url) ret, frame = cap.read() cv2.imwrite(\u0026ldquo;E:/test.png\u0026rdquo;, frame) cap.release() cv2.destroyAllWindows()\n在使用PyInstaller打包上面python程序后，执行exe程序出现以下错误，获取的frame为0字节\nlibpng warning:Image width is zero in IHDR libpng warning:Image height is zero in IHDR libpng error:Invalid IHDR data\n解决方法：进入Python37\\Lib\\site-packages\\cv2 目录下，把后缀名为dll的文件拷贝到exe程序目录下","tags":"","title":"PyInstaller打包python程序后，cv2.VideoCapture()获取摄像头画画失败","url":"/posts/2019-10-06-pyinstaller%E6%89%93%E5%8C%85python%E7%A8%8B%E5%BA%8F%E5%90%8Ecv2-videocapture%E8%8E%B7%E5%8F%96%E6%91%84%E5%83%8F%E5%A4%B4%E7%94%BB%E7%94%BB%E5%A4%B1%E8%B4%A5/"},{"date":"6 October, 2019","subtitle":"在Windows下，我们可以使用内建的msvcrt库，实现按任意键继续或退出\n一、获取按键对应的ASCII 值import msvcrt print(ord(msvcrt.getch()))\nsvcrt 中的 getch() 方法，作用是获取一个按键响应并返回对应的字符。\nord 将获得的字符转换为 ASCII 数值，例如捕获按键“q”将得到数值113，按键“Q”将得到数值81\n二、利用while死循环，当msvcrt捕获到指定的按键，中断循环import msvcrt\nprint(\u0026ldquo;Press \u0026lsquo;q\u0026rsquo; to exit\u0026hellip;\u0026rdquo;)\nwhile True: if ord(msvcrt.getch()) in [81, 113]: break\nLinux下实现方式请查看以下文章：\nhttps://www.jb51.net/article/90845.htm","tags":"","title":"Python3实现按任意键继续或退出","url":"/posts/2019-10-06-python%E5%AE%9E%E7%8E%B0%E6%8C%89%E4%BB%BB%E6%84%8F%E9%94%AE%E7%BB%A7%E7%BB%AD%E6%88%96%E9%80%80%E5%87%BA/"},{"date":"5 October, 2019","subtitle":"一、安装配置snmptrapd[root@zabbix1 ~]# yum install -y net-snmp net-snmp-utils net-snmp-perl [root@zabbix1 ~]# vim /etc/snmp/snmptrapd.conf authCommunity log,execute,net public #设置团体名 traphandle default /usr/sbin/snmptthandler #设置snmptt为trap接收器，此时还没安装snmptt\n[root@zabbix1 ~]# systemctl start snmptrapd [root@zabbix1 ~]# systemctl enable snmptrapd\n#防火墙开放snmp trap端口 [root@zabbix1 ~]# firewall-cmd \u0026ndash;permanent \u0026ndash;add-port=162/udp [root@zabbix1 ~]# firewall-cmd \u0026ndash;reload\n#测试 设备打开snmptrap，设置接收主机IP和团体名,手动触发告警,查看是否接收到告警信息 [root@zabbix1 ~]# tail -F /var/log/messages\n二、更改snmptrapd日志路径snmptrapd接收到的log默认会到/var/log/messages里面，但如果snmptrapd设备较多，会产生大量日志，会干扰我们平时查看系统日志信息，所以我们要把snmptrapd的日志信息单独存放\n-L：日志选项。支持的输出方式有标准错误（e），标准输出（o），文件（f），syslog（s）。\n-Ls：输出到系统日志文件\n-Lf：输出到指定文件\n#新建日志文件存放目录 [root@zabbix1 ~]# mkdir /var/log/snmptrap/\n#修改systemd服务文件 [root@zabbix1 ~]# vim /usr/lib/systemd/system/snmptrapd.service\n[Service] Type=notify #Environment=OPTIONS=\u0026quot;-Lsd\u0026quot; #注释该行 EnvironmentFile=-/etc/sysconfig/snmptrapd #ExecStart=/usr/sbin/snmptrapd $OPTIONS -f","tags":"","title":"Zabbix_配置snmptrap监控交换机","url":"/posts/2019-10-05-zabbix_%E9%85%8D%E7%BD%AEsnmptrap/"},{"date":"5 October, 2019","subtitle":"一、安装配置snmptrapd[root@zabbix1 ~]# yum install -y net-snmp net-snmp-utils net-snmp-perl [root@zabbix1 ~]# vim /etc/snmp/snmptrapd.conf authCommunity log,execute,net public #设置团体名 traphandle default /usr/sbin/snmptthandler #设置snmptt为trap接收器，此时还没安装snmptt\n[root@zabbix1 ~]# systemctl start snmptrapd [root@zabbix1 ~]# systemctl enable snmptrapd\n#防火墙开放snmp trap端口 [root@zabbix1 ~]# firewall-cmd \u0026ndash;permanent \u0026ndash;add-port=162/udp [root@zabbix1 ~]# firewall-cmd \u0026ndash;reload\n#测试 设备打开snmptrap，设置接收主机IP和团体名,手动触发告警,查看是否接收到告警信息 [root@zabbix1 ~]# tail -F /var/log/messages\n二、更改snmptrapd日志路径snmptrapd接收到的log默认会到/var/log/messages里面，但如果snmptrapd设备较多，会产生大量日志，会干扰我们平时查看系统日志信息，所以我们要把snmptrapd的日志信息单独存放\n-L：日志选项。支持的输出方式有标准错误（e），标准输出（o），文件（f），syslog（s）。\n-Ls：输出到系统日志文件\n-Lf：输出到指定文件\n#新建日志文件存放目录 [root@zabbix1 ~]# mkdir /var/log/snmptrap/\n#修改systemd服务文件 [root@zabbix1 ~]# vim /usr/lib/systemd/system/snmptrapd.service\n[Service] Type=notify #Environment=OPTIONS=\u0026quot;-Lsd\u0026quot; #注释该行 EnvironmentFile=-/etc/sysconfig/snmptrapd #ExecStart=/usr/sbin/snmptrapd $OPTIONS -f","tags":"","title":"Zabbix_配置snmptrap监控交换机","url":"/posts/2019-10-05-zabbix_%E9%85%8D%E7%BD%AEsnmptrapnull/"},{"date":"1 October, 2019","subtitle":"Usage: tcpdump [-aAbdDefhHIJKlLnNOpqStuUvxX#] [ -B size ] [ -c count ] [ -C file_size ] [ -E algo:secret ] [ -F file ] [ -G seconds ] [ -i interface ] [ -j tstamptype ] [ -M secret ] [ \u0026ndash;number ] [ -Q|-P in|out|inout ] [ -r file ] [ -s snaplen ] [ \u0026ndash;time-stamp-precision precision ] [ \u0026ndash;immediate-mode ] [ -T type ] [ \u0026ndash;version ] [ -V file ] [ -w file ] [ -W filecount ] [ -y datalinktype ] [ -z postrotate-command ] [ -Z user ] [ expression ]","tags":"","title":"tcpdump常用参数及使用案例","url":"/posts/2019-10-01-tcpdump%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%A1%88%E4%BE%8B/"},{"date":"1 October, 2019","subtitle":"在主题的functions.php文件最后面添加以下代码//编辑器增加字体格式和字体大小按钮 function add_editor_buttons($buttons) { $buttons[] = \u0026lsquo;fontselect\u0026rsquo;; $buttons[] = \u0026lsquo;fontsizeselect\u0026rsquo;; return $buttons; } add_filter(\u0026ldquo;mce_buttons_2\u0026rdquo;, \u0026ldquo;add_editor_buttons\u0026rdquo;);\n//自定义字体格式 function custum_fontfamily($initArray){ $initArray[\u0026lsquo;font_formats\u0026rsquo;] = \u0026ldquo;微软雅黑=\u0026lsquo;微软雅黑\u0026rsquo;;宋体=\u0026lsquo;宋体\u0026rsquo;;黑体=\u0026lsquo;黑体\u0026rsquo;;仿宋=\u0026lsquo;仿宋\u0026rsquo;;楷体=\u0026lsquo;楷体\u0026rsquo;;隶书=\u0026lsquo;隶书\u0026rsquo;;幼圆=\u0026lsquo;幼圆\u0026rsquo;;Arial=\u0026lsquo;Arial\u0026rsquo;;\u0026rdquo;; return $initArray; } add_filter(\u0026rsquo;tiny_mce_before_init\u0026rsquo;, \u0026lsquo;custum_fontfamily\u0026rsquo;);\n编辑器其它功能按钮剪切（cut） 复制（copy） 粘贴（paste） 撤销（undo） 重做（redo） 居中（justifycenter） 加粗（bold） 斜体（italic） 左对齐（justifyleft） 右对齐（justfyright） 两端对齐（justfyfull） 插入超链接（link） 取消超链接（unlink） 插入图片（image） 清除格式（removeformat） 下划线（underline） 删除线（strikethrough） 锚文本（anchor） 新建文本（newdocument） 字体颜色（forecolor） 字体背景色（backcolor） 格式选择（formmatselect） 字体选择（fontselect） 字号选择（fontsizeselect） 样式选择（styleselect） 无序列表（bullist） 编号列表（numlist） 减少缩进（outdent） 缩进（indent） 帮助（wp_help） 打开HTML代码编辑器（code） 水平线（hr） 清除冗余代码（cleanup） 上标（sub） 下标（sup） 特殊符号（charmap） 插入more标签（wp_more） 插入分页标签（wp_page） 隐藏按钮显示开关（wp_adv） 隐藏按钮区起始部分（wp_adv_start） 隐藏按钮区结束部分（wp_adv_end） 拼写检查（spellchecker）\n//编辑器增加按钮方法：在主题的functions.php文件最后面添加以下代码（如果已有add_editor_buttons函数，直接在函数体内增加按钮） function add_editor_buttons($buttons) { $buttons[] = \u0026lsquo;fontselect\u0026rsquo;; //增加字体按钮 $buttons[] = \u0026lsquo;bold\u0026rsquo;; //增加加粗按钮 return $buttons; } add_filter(\u0026ldquo;mce_buttons_2\u0026rdquo;, \u0026ldquo;add_editor_buttons\u0026rdquo;); //mce_buttons_2表示在编辑器第二行增加按钮","tags":"wordpress","title":"WordPress编辑器栏增加字体和大小","url":"/posts/2019-10-01-wordpress%E7%BC%96%E8%BE%91%E5%99%A8%E6%A0%8F%E5%A2%9E%E5%8A%A0%E5%AD%97%E4%BD%93%E5%92%8C%E5%A4%A7%E5%B0%8F/"},{"date":"30 September, 2019","subtitle":"环境：zabbix1：192.168.1.241（Master）\nzabbix2：192.168.1.242（Slave）\nzabbix：192.168.1.240（虚拟IP）\n配置hosts文件[root@Zabbix1 ~]# vim /etc/hosts 192.168.1.241 zabbix1 192.168.1.242 zabbix2 192.168.1.240 zabbix\n一、安装Zabbix#安装Zabbix仓库 [root@Zabbix1 ~]# rpm -Uvh https://repo.zabbix.com/zabbix/4.2/rhel/7/x86_64/zabbix-release-4.2-2.el7.noarch.rpm [root@Zabbix1 ~]# yum clean all\n#安装Zabbix server，Web前端，agent，数据库 [root@Zabbix1 ~]# yum -y install zabbix-server-mysql zabbix-web-mysql zabbix-agent mariadb mariadb-server\n#初始化并创建数据库 [root@Zabbix1 ~]# systemctl enable mariadb [root@Zabbix1 ~]# systemctl start mariadb [root@Zabbix1 ~]# mysql_secure_installation [root@Zabbix1 ~]# mysql -uroot -p MariaDB [(none)]\u0026gt; create database zabbix character set utf8 collate utf8_bin; MariaDB [(none)]\u0026gt; grant all privileges on zabbix.","tags":"","title":"搭建Zabbix高可用架构","url":"/posts/2019-09-30-%E6%90%AD%E5%BB%BAzabbix%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84/"},{"date":"28 September, 2019","subtitle":"环境：\nMaster主机：zabbix1\nSlave主机：zabbix2\n主从同步的数据库：zabbix\n一、备份Master数据库[root@Zabbix1 ~]# mysqldump -uroot -p zabbix \u0026ndash;single-transaction \u0026ndash;master-data=1 \u0026ndash;flush-logs \u0026gt; zabbix.sql #拷贝到slave机器 [root@Zabbix1 ~]# scp zabbix.sql zabbix2:/root/zabbix.sql\n二、导入主库并重新同步[root@Zabbix2 ~]# mysql -uroot -p mysql\u0026gt; stop slave; mysql\u0026gt; reset slave; mysql\u0026gt; use zabbix mysql\u0026gt; set sql_log_bin=0; #临时关闭bin_log，加快恢复速度 mysql\u0026gt; source /root/zabbix.sql #恢复数据库\n因为备份数据库时，指定了\u0026ndash;master-data=1，备份文件会记录备份时的master_log_file和log_pos，并在mysql控制台下使用source + 备份文件名 恢复，所以不用再使用CHANGE MASTER TO指定文件和位置 mysql\u0026gt; start slave;\nmysql\u0026gt; show slave status \\G;","tags":"","title":"mysql主从数据不一致，同步失败后重做主从","url":"/posts/2019-09-28-mysql%E4%B8%BB%E4%BB%8E%E6%95%B0%E6%8D%AE%E4%B8%8D%E4%B8%80%E8%87%B4%E5%90%8C%E6%AD%A5%E5%A4%B1%E8%B4%A5%E5%90%8E%E9%87%8D%E5%81%9A%E4%B8%BB%E4%BB%8E/"},{"date":"26 September, 2019","subtitle":"实验环境：\nServer1：192.168.200.10\nServer2：192.168.200.20\n虚拟IP： 192.168.200.30\n[root@server1 ~]# yum -y install httpd keepalived\n[root@server1 ~]# vim /etc/keepalived/keepalived.conf global_defs { router_id Server1\n}\nvrrp_script http_chk { script \u0026ldquo;/etc/keepalived/httpd_check.sh\u0026rdquo; //脚本路径 interval 3 //脚本执行的间隔 }\nvrrp_instance VI_1 { state MASTER\ninterface ens33\nvirtual_router_id 51 priority 100 advert_int 1 authentication { auth_type PASS auth_pass 1111 } virtual_ipaddress { 192.168.200.30\n} track_script { http_chk //调用脚本 } }\n[root@server2 ~]# vim /etc/keepalived/keepalived.conf global_defs { router_id Server2 }","tags":"","title":"keepalived之vrrp_script脚本分析","url":"/posts/2019-09-26-keepalived%E4%B9%8Bvrrp_script%E8%84%9A%E6%9C%AC%E5%88%86%E6%9E%90/"},{"date":"25 September, 2019","subtitle":"实验环境：\nServer1：192.168.200.10\nServer2：192.168.200.20\n虚拟IP： 192.168.200.30\n一、Keepalived实现简单的双机热备#主机和备机安装httpd和keepalived [root@server1 ~]# yum -y install httpd keepalived\n#主机配置keepalived [root@server1 ~]# vim /etc/keepalived/keepalived.conf global_defs { router_id Server1 //设置router_id，名称要唯一，两台机器不能相同 }\nvrrp_instance VI_1 { state MASTER //定义本机的初始状态，MASTER为主机，BACKUP为备机 interface ens33 //指定运行VRRP的网卡名称 virtual_router_id 51 //VRRP路由ID，取值 1~255 ，同一组VRRP路由ID必须一致，该ID用于虚拟路由的MAC地址 priority 100 //优先级，值最大的将成为Master节点，取值 1~254 advert_int 1 authentication { auth_type PASS auth_pass 1111 } virtual_ipaddress { 192.168.200.30 //虚拟IP，两台机器要一致 } }\n#备机配置keepalived [root@server2 ~]# vim /etc/keepalived/keepalived.conf global_defs { router_id Server2 //设置router_id，名称要唯一，两台机器不能相同 }\nvrrp_instance VI_1 { state BACKUP //定义本机的初始状态，MASTER为主机，BACKUP为备机 interface ens33 //指定运行VRRP的网卡名称 virtual_router_id 51 //VRRP路由ID，取值 1~255 ，同一组VRRP路由ID必须一致，该ID用于虚拟路由的MAC地址 priority 50 //优先级，值最大的将成为Master节点，取值 1~254 advert_int 1 authentication { auth_type PASS auth_pass 1111 } virtual_ipaddress { 192.","tags":"","title":"keepalived入门-实现httpd高可用","url":"/posts/2019-09-25-keepalived%E5%85%A5%E9%97%A8-%E5%AE%9E%E7%8E%B0httpd%E9%AB%98%E5%8F%AF%E7%94%A8/"},{"date":"6 September, 2019","subtitle":"正向代理和反向代理的区别：正向代理：代理服务器为客户端去收发请求，隐藏真实客户端\n反向代理：代理服务器为服务端收发请求，隐藏真实服务端\n需求一：隐藏真实网站服务器，由代理服务器去访问内部网站服务器，提高了内部服务器安全性1、安装nginx\n[root@server1 ~]# yum -y install epel-release //安装EPEL源 [root@server1 ~]# yum -y install nginx [root@server1 ~]# systemctl start nginx [root@server1 ~]# systemctl enable nginx\n2、配置防火墙\n[root@server1 ~]# firewall-cmd \u0026ndash;permanent \u0026ndash;add-service=http success [root@server1 ~]# firewall-cmd \u0026ndash;reload success\n3、配置反向代理\n[root@server1 ~]# vim /etc/nginx/nginx.conf\n注释掉默认主机server {listen 80 default_server;listen [::]:80 default_server;server_name _;root /usr/share/nginx/html;# Load configuration files for the default server block.include /etc/nginx/default.d/*.conf;location / {}error_page 404 /404.html;location = /40x.html {}error_page 500 502 503 504 /50x.","tags":"","title":"Nginx反向代理与负载均衡","url":"/posts/2019-09-06-nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E4%B8%8E%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"},{"date":"3 September, 2019","subtitle":"需求：内网环境下，无法访问外网，如何更新系统以及安装项目所需软件？ 一、找一台可以联网的机器，安装操作系统（一般最小化安装，和内网机器一致）缓存所需软件包1、开启yum缓存\n[root@host1 ~]# vim /etc/yum.conf [main] cachedir=/var/cache/yum/$basearch/$releasever //此处为缓存路径 keepcache=1 //设为1，则开启yum缓存 [root@host1 ~]# yum clean all\n2、更新系统（缓存更新包）\n[root@host1 ~]# yum -y update\n3、缓存制作yum仓库所需软件\n[root@host1 ~]# yum -y install createrepo vsftpd\n4、缓存项目所需要的软件包\n[root@host1 ~]# yum -y install ncurses ncurses-devel openssl-devel bison gcc gcc-c++ make\n5、插入U盘或移动硬盘，把yum缓存下来的软件包，拷贝出来\n[root@host1 ~]# dmesg //查看U盘设备名称 [root@host1 ~]# mount /dev/sdb /mnt/usb //挂载 [root@host1 ~]# mkdir /mnt/usb/repo [root@host1 ~]# find /var/cache/yum/ -name \u0026ldquo;*.rpm\u0026rdquo; -exec cp -rf {} /mnt/usb/repo \\; //搜索rpm包并复制到U盘","tags":"","title":"内网环境搭建YUM仓库","url":"/posts/2019-09-03-%E5%86%85%E7%BD%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BAyum%E4%BB%93%E5%BA%93/"},{"date":"20 June, 2019","subtitle":"Zabbix API官方文档： https://www.zabbix.com/documentation/4.0/zh/manual/api\n1、向 api_jsonrpc.php 发送HTTP_POST 登录请求，获取身份验证令牌\n# -*- coding:utf-8 -*- import json import requests\nurl = \u0026lsquo;http://172.10.10.2/zabbix/api_jsonrpc.php\u0026rsquo; post_headers = {\u0026lsquo;Content-Type\u0026rsquo;: \u0026lsquo;application/json\u0026rsquo;} post_data = { \u0026ldquo;jsonrpc\u0026rdquo; : \u0026ldquo;2.0\u0026rdquo;, \u0026ldquo;method\u0026rdquo; : \u0026ldquo;user.login\u0026rdquo;, \u0026ldquo;params\u0026rdquo; : { \u0026ldquo;user\u0026rdquo; : \u0026ldquo;Admin\u0026rdquo;, \u0026ldquo;password\u0026rdquo; : \u0026ldquo;zabbix\u0026rdquo; }, \u0026ldquo;id\u0026rdquo; : 1 }\nret = requests.post(url, data = json.dumps(post_data), headers = post_headers) print(ret.text)\n输出结果：\n{ \u0026ldquo;jsonrpc\u0026rdquo;:\u0026ldquo;2.0\u0026rdquo;, \u0026ldquo;result\u0026rdquo;:\u0026ldquo;da336b04d376d914bf06bd2192c4ce3f\u0026rdquo;, #身份验证令牌 \u0026ldquo;id\u0026rdquo;:1 }\n2、查询所有主机的信息\nurl = \u0026lsquo;http://172.10.10.2/zabbix/api_jsonrpc.php\u0026rsquo; post_headers = {\u0026lsquo;Content-Type\u0026rsquo;: \u0026lsquo;application/json\u0026rsquo;} post_data = { \u0026ldquo;jsonrpc\u0026rdquo;: \u0026ldquo;2.","tags":"","title":"使用Python调用Zabbix API","url":"/posts/2019-06-20-%E4%BD%BF%E7%94%A8python%E8%B0%83%E7%94%A8zabbixapi/"},{"date":"20 June, 2019","subtitle":"Zabbix API官方文档： https://www.zabbix.com/documentation/4.0/zh/manual/api\n1、向 api_jsonrpc.php 发送HTTP_POST 登录请求，获取身份验证令牌\n# -*- coding:utf-8 -*- import json import requests\nurl = \u0026lsquo;http://172.10.10.2/zabbix/api_jsonrpc.php\u0026rsquo; post_headers = {\u0026lsquo;Content-Type\u0026rsquo;: \u0026lsquo;application/json\u0026rsquo;} post_data = { \u0026ldquo;jsonrpc\u0026rdquo; : \u0026ldquo;2.0\u0026rdquo;, \u0026ldquo;method\u0026rdquo; : \u0026ldquo;user.login\u0026rdquo;, \u0026ldquo;params\u0026rdquo; : { \u0026ldquo;user\u0026rdquo; : \u0026ldquo;Admin\u0026rdquo;, \u0026ldquo;password\u0026rdquo; : \u0026ldquo;zabbix\u0026rdquo; }, \u0026ldquo;id\u0026rdquo; : 1 }\nret = requests.post(url, data = json.dumps(post_data), headers = post_headers) print(ret.text)\n输出结果：\n{ \u0026ldquo;jsonrpc\u0026rdquo;:\u0026ldquo;2.0\u0026rdquo;, \u0026ldquo;result\u0026rdquo;:\u0026ldquo;da336b04d376d914bf06bd2192c4ce3f\u0026rdquo;, #身份验证令牌 \u0026ldquo;id\u0026rdquo;:1 }\n2、查询所有主机的信息\nurl = \u0026lsquo;http://172.10.10.2/zabbix/api_jsonrpc.php\u0026rsquo; post_headers = {\u0026lsquo;Content-Type\u0026rsquo;: \u0026lsquo;application/json\u0026rsquo;} post_data = { \u0026ldquo;jsonrpc\u0026rdquo;: \u0026ldquo;2.","tags":"","title":"使用Python调用Zabbix API","url":"/posts/2019-06-20-%E4%BD%BF%E7%94%A8python%E8%B0%83%E7%94%A8zabbixapinull/"},{"date":"10 May, 2019","subtitle":"vsftp会根据/etc/shells文件来判断用户是否是有效，并阻止shell不在/etc/shells文件里的用户登陆\n解决方法：echo \u0026lsquo;/sbin/nologin\u0026rsquo; \u0026raquo; /etc/shells","tags":"","title":"vsftpd本地用户shell为nologin无法访问ftp","url":"/posts/2019-05-10-vsftpd%E6%9C%AC%E5%9C%B0%E7%94%A8%E6%88%B7shell%E4%B8%BAnologin%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEftp/"},{"date":"10 March, 2019","subtitle":"1、下载mysql绿色版压缩包 https://dev.mysql.com/downloads/mysql/\n2、解压到安装目录后，在根目录创建data文件夹\n3、把mysql下的bin目录添加到环境变量\n4、根目录创建my.ini文件，并拷贝以下代码，并修改basedir和datadir路径\n# MySQL Server Instance Configuration File\n\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;-Generated by the MySQL Server Instance Configuration WizardInstallation Instructions\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;-On Linux you can copy this file to /etc/my.cnf to set global options,mysql-data-dir/my.cnf to set server-specific options(@localstatedir@ for this installation) or to~/.my.cnf to set user-specific options.On Windows you should keep this file in the installation directoryof your server (e.g. C:\\Program Files\\MySQL\\MySQL Server X.Y). Tomake sure the server reads the config file use the startup option\u0026ldquo;\u0026ndash;defaults-file\u0026rdquo;.","tags":"","title":"mysql8.0绿色版安装及mysqldump备份","url":"/posts/2019-03-10-mysql8-0%E7%BB%BF%E8%89%B2%E7%89%88%E5%AE%89%E8%A3%85%E5%8F%8Amysqldump%E5%A4%87%E4%BB%BD/"},{"date":"6 March, 2019","subtitle":"zabbix接收trap的工作流程：\nsnmptrapd 收到trap snmptrapd将trap传递给SNMPTT或调用Perl接收器 SNMPTT或Perl trap接收器解析，格式化并将trap写入文件 Zabbix SNMP trap读取并解析trap文件 对于每个trap，Zabbix发现主机接口与接收的trap地址匹配的所有“SNMP trap”监控项。请注意，在匹配期间只使用主机接口中选定的“IP”或“DNS”。 对于每个找到的监控项，将trap与“snmptrap[regexp]”中的regexp进行比较。 trap设置为all匹配项的值。如果没有找到匹配的监控项，并且有一个“snmptrap.fallback”监控项，则将trap设置为该值。 如果trap未设置为任何监控项的值，Zabbix默认记录不匹配的trap。（这由管理 - \u0026gt;常规 - \u0026gt;其它中的“记录不匹配的SNMP trap（Log unmatched SNMP traps）”配置。） 一、安装配置snmptrapd\n1、yum install -y net-snmp net-snmp-utils net-snmp-perl #安装net-snmp及相关工具（里面包含SNMPTrapd）\n2、vim /etc/snmp/snmptrapd.conf\nauthCommunity log,execute,net 团体名 #指定团体名\ntraphandle default /usr/sbin/snmptthandler #指定snmptt为trap接收器，此时还没安装snmptt\n3、systemctl start snmptrapd #启动snmptrapd\n4、systemctl enable snmptrapd #加入开机启动项\n5、交换机开启snmp和snmptrap，并指定团体名和trap目标主机IP\n6、tail -F /var/log/messages #打开并跟踪日志\n7、手动关闭交换机端口，触发告警，验证snmptrapd是否能正常接收trap\n二、安装配置snmptt\n1、yum -y install epel-release #安装EPRL源 2、yum -y install snmptt #安装snmptt 3、systemctl start snmptt （启动报错：Could not load Perl module Sys::Syslog!","tags":"","title":"zabbix利用SNMPTrap接收交换机主动告警","url":"/posts/2019-03-06-zabbix%E5%88%A9%E7%94%A8snmptrap%E6%8E%A5%E6%94%B6%E4%BA%A4%E6%8D%A2%E6%9C%BA%E4%B8%BB%E5%8A%A8%E5%91%8A%E8%AD%A6/"},{"date":"4 March, 2019","subtitle":"1、在Zabbix中添加主机\n输入名称、群组和交换机IP（交换机要开启snmp）\n2、创建监控项\n输入OID和其它信息（键值随便填，但是不能和系统内的键值重复）\nOID获取方法可查看上一篇文章：https://www.cnblogs.com/zhenwei66/p/10473121.html\n3、添加图形\n查看图形","tags":"","title":"zabbix监控交换机状态","url":"/posts/2019-03-04-zabbix%E7%9B%91%E6%8E%A7%E4%BA%A4%E6%8D%A2%E6%9C%BA%E7%8A%B6%E6%80%81/"},{"date":"4 March, 2019","subtitle":"1、安装邮件服务\nyum -y install mailx echo \u0026ldquo;我是内容\u0026rdquo; | mail -s \u0026ldquo;邮件测试\u0026rdquo; 894548465@qq.com #发邮件测试\n2、添加报警媒介\n输入接收告警邮件的邮箱\n3、配置SMTP服务端\n使用本机作为SMTP服务器\n4、创建触发器\n最后1个值大于40度则触发告警（值设低一点，方便查看效果） 更多触发器表达式用法，可查看官方文档：https://www.zabbix.com/documentation/4.0/zh/manual/config/triggers/expression\n函数用法：https://www.zabbix.com/documentation/4.0/manual/appendix/triggers/functions\n查看触发器是否被触发\n4、配置Actions动作\n动作内容中，可用的宏列表： https://www.zabbix.com/documentation/4.0/zh/manual/appendix/macros/supported_by_location\n5、查看告警邮件\nPS：如果收不到，有可能是被过滤到垃圾箱","tags":"","title":"zabbix配置邮件告警","url":"/posts/2019-03-04-zabbix%E9%85%8D%E7%BD%AE%E9%82%AE%E4%BB%B6%E5%91%8A%E8%AD%A6/"},{"date":"4 March, 2019","subtitle":"1、下载交换机MIB参考文件 访问 https://support.huawei.com/enterprise/zh/index.html，搜索交换机型号，点击案例库，选择MIB参考\n2、交换机下启用snmp，并设置团体名 图形界面：\n命令行：\nsystem-view snmp-agent snmp-agent community read public //设置读团体名:public snmp-agent community write private //设置写团体名:private\n3、linux下安装snmpwalk\nyum -y install net-snmp-utils\n4、使用snmpwalk获取交换机OID信息\nsnmpwalk -v SNMP版本（1或2c) -c 团体名 IP地址 OID(对象标示符)\na、通过硬件实体名OID，查询硬件索引值，查询到MPU Board索引值为67108873\nsnmpwalk -v 2c -c 团体名 IP地址 1.3.6.1.2.1.47.1.1.1.1.7\nb、查询CPU使用率，查询时要在OID后面加上MPU Board的索引值\n（如果不指定硬件索引，会列出所有硬件的CPU使用率的值，但是其它硬件没有CPU使用率，所以值为0）\nsnmpwalk -v 2c -c 团体名 IP地址 1.3.6.1.4.1.2011.5.25.31.1.1.1.1.5.67108873\nc、查询内存使用率\nsnmpwalk -v 2c -c 团体名 IP地址 1.3.6.1.4.1.2011.5.25.31.1.1.1.1.7.67108873\nd、查询设备温度\nsnmpwalk -v 2c -c 团体名 IP地址 1.3.6.1.4.1.2011.5.25.31.1.1.1.1.11.67108873","tags":"","title":"下载华为交换机MIB参考文件并使用snmpwalk获取OID信息","url":"/posts/2019-03-04-%E4%B8%8B%E8%BD%BD%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E6%9C%BAmib%E5%8F%82%E8%80%83%E6%96%87%E4%BB%B6%E5%B9%B6%E4%BD%BF%E7%94%A8snmpwalk%E8%8E%B7%E5%8F%96oid%E4%BF%A1%E6%81%AF/"},{"date":"2 March, 2019","subtitle":"1、添加 Zabbix 软件仓库\nrpm -ivh http://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm\n2、启用可选 rpms 的软件仓库\nyum -y install yum-utils yum-config-manager \u0026ndash;enable rhel-7-server-optional-rpms\n3、安装 Server/前端/agent\nyum -y install zabbix-server-mysql zabbix-web-mysql zabbix-agent\n4、安装mariaDB数据库\nyum install -y mariadb mariadb-server\n5、创建数据库\nmysql -uroot -p mysql\u0026gt; create database zabbix character set utf8 collate utf8_bin;\n6、创建账户并授权\nmysql\u0026gt; grant all privileges on zabbix.* to zabbix@localhost identified by \u0026lsquo;zabbix\u0026rsquo;; mysql\u0026gt; quit;\n7、导入数据 (导入需要一点时间，不要以为卡住按ctrl+c停止)\nzcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -pzabbix zabbix\n8、修改Zabbix server配置文件\nvim /etc/zabbix/zabbix_server.conf DBPassword=zabbix","tags":"","title":"RHEL7/CentOS7 安装Zabbix","url":"/posts/2019-03-02-rhel7-centos7%E5%AE%89%E8%A3%85zabbix/"},{"date":"2 March, 2019","subtitle":"1、添加 Zabbix 软件仓库\nrpm -ivh http://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm\n2、启用可选 rpms 的软件仓库\nyum -y install yum-utils yum-config-manager \u0026ndash;enable rhel-7-server-optional-rpms\n3、安装 Server/前端/agent\nyum -y install zabbix-server-mysql zabbix-web-mysql zabbix-agent\n4、安装mariaDB数据库\nyum install -y mariadb mariadb-server\n5、创建数据库\nmysql -uroot -p mysql\u0026gt; create database zabbix character set utf8 collate utf8_bin;\n6、创建账户并授权\nmysql\u0026gt; grant all privileges on zabbix.* to zabbix@localhost identified by \u0026lsquo;zabbix\u0026rsquo;; mysql\u0026gt; quit;\n7、导入数据 (导入需要一点时间，不要以为卡住按ctrl+c停止)\nzcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -pzabbix zabbix\n8、修改Zabbix server配置文件\nvim /etc/zabbix/zabbix_server.conf DBPassword=zabbix","tags":"","title":"RHEL7/CentOS7 安装Zabbix","url":"/posts/2019-03-02-rhel7-centos7%E5%AE%89%E8%A3%85zabbixnull/"},{"date":"24 February, 2019","subtitle":"一、通过web浏览器访问\n1、打开浏览器，在地址栏上输入IMM2的IP地址访问，打开登录页面后，输入用户名和密码 登录\nPS：第一次登录IMM2时，初始的用户名为USERID，密码为PASSW0RD(零，不是字母O)。在初始配置期间更改此用户名和密码，以增强安全性。\n二、通过IPMI 管理工具：IPMItool进行访问\nipmitool 是一种命令行方式的 ipmi 平台管理工具，通过它可以实现获取传感器的信息、显示系统日志内容、网络远程开关机等功能。\n一些英文简写：\nSDR：传感器数据库 sensor data repository\nBMC ：基板管理控制器 Baseboard Management Controller\nSEL : 系统事件日志 System Evelnt Log\nFRU : 可更换部件 Field Replaceable Unit linux下可以通过包管理工具安装，例如：yum install ipmitool -y\n常用命令：\nipmitool -U 用户名 -P 密码 -H IP地址 power off //关机（非正常关机）\nipmitool -U 用户名 -P 密码 -H IP地址 power on //开机\nipmitool -U 用户名 -P 密码 -H IP地址 sdr //打印传感器数据库条目\nipmitool -U 用户名 -P 密码 -H IP地址 sensor // 打印详细的传感器数据","tags":"","title":"访问System x3650 IMM2的几种方式","url":"/posts/2019-02-24-%E8%AE%BF%E9%97%AEsystemx3650imm2%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/"},{"date":"22 February, 2019","subtitle":"1、开启服务器。\n2、显示 Setup提示后，按 F1。（此提示在屏幕上仅显示几秒钟。必须迅速按 F1。）\n如果同时设置了开机密码和管理员密码，则必须输入管理员密码才能访问完整的 Setup Utility 菜单。\n3、在 Setup Utility 主菜单中，选择 System Settings。\n4、在下一屏幕中，选择 Integrated Management Module。\n5、在下一屏幕中，选择 Network Configuration。\n6、向下移动到DHCP Control，选择Static IP。\n7、输入管理接口的IP地址、掩码和网关\n8、向下移动到Save Network Settings\n9、退出Setup utility。","tags":"","title":"Lenovo System x3650 设置管理接口地址","url":"/posts/2019-02-22-lenovosystemx3650%E8%AE%BE%E7%BD%AE%E7%AE%A1%E7%90%86%E6%8E%A5%E5%8F%A3%E5%9C%B0%E5%9D%80/"},{"date":"25 February, 2018","subtitle":"对于网站来说，发送各种例如注册通知的邮件是很基本的一个需求，之前我一直用的是腾讯的企业邮箱，感觉挺方便的，直接可以绑定QQ邮箱接收邮件，网站配置一下SMTP也就可以发出邮件。\n但是在前几天由于有重要信息需要立即通知用户，所以选择了群发邮件的方式。在当我以为一切都是辣么完美的时候，陆续有用户过来问我什么情况，我都会跟他们说请查收邮件，但是有好几个人说并没有任何邮件，于是我试着再发一次，结果返回了错误提示。在网上找了下原因，后来看到这个：各大免费邮箱邮件群发账户SMTP服务器配置及SMTP发送量限制情况，才知道是因为发信数量限制了。\n所以只好另寻出路了，然后我在知乎上面找到了很多个提供邮件发送的服务商，大概有这些：SendGrid、MailChimp、Amazon SES、SendCloud、Mailgun等等，在看了不少人的建议之后，我选择了Mailgun。\nMailgun注册和配置都挺简单，很快我就成功的发出了第一封邮件，怀着这封欣喜，我又发送了几封邮件，可是悲剧发生在第三封邮件，Mailgun后台有详细的发送记录，这个非常不错，在后台我看到我的邮件被拒收了，原因大概是该服务器IP的发信频率超过腾讯邮箱限制。所以这里就涉及到IP的问题，目前第三方的邮件发送服务普遍都是共享IP（后面还试过SendCloud、），而共享IP并不能确定是否已经达到接收方的数量限制，一旦达到了就无法再发送。这就是说还需要使用独立IP才能保证邮件有较高的到达率，接着就看了各家的独立IP价格，一般都是二十几甚至四十几美刀一个月，这对于我们这种小站长邮件需求不高的来说确实有点贵，买台VPS都不用这个价吧。\n经过上面这些折腾，也算明白了如果要想顺畅的发出邮件的话，除了花钱，就只有自己搭建一个邮件服务器了。\n好了，下面开始进入正题，教你搭建一个简单的邮件服务器。\n用于搭建的服务器信息阿里云 Centos 6.5 32位\n安装过程1.安装Postfixyum -y install postfix 安装完成还需要替换系统自带的sendmail：\nrpm -e sendmail 或者 yum remove sendmail 修改MTA（默认邮件传输代理）\nalternatives --config mta 然后直接回车即可。\n检查一下是不是已经设置成功了。\nalternatives --display mta 第一行可以看到mta的状态。 例如：mat - status is manual.\n2.安装Dovecotyum -y install dovecot 3.配置Postfix编辑/etc/postfix/main.cf，可以下载下来修改，也可以使用vi进行编辑：\nvi /etc/postfix/main.cf 修改如下：\n# 75行: 取消注释，设置hostname myhostname = mail.lomu.me # 83行: 取消注释，设置域名 mydomain = lomu.me # 99行: 取消注释 myorigin = $mydomain # 116行: 修改 inet_interfaces = all # 119行: 推荐ipv4，如果支持ipv6，则可以为all inet_protocols = ipv4 # 164行: 添加 mydestination = $myhostname, localhost.","tags":"","title":"Linux系统下邮件服务器的搭建（Postfix+Dovecot）","url":"/posts/2018-02-25-linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BApostfixdovecot/"},{"date":"2 February, 2018","subtitle":"首先要安装三个模块：xlrd，xlwt，xlutils\n命令：pip install xlrd xlwt xlutils\n示例代码：\n#!/usr/bin/env python\n-*- coding:utf-8 -*-from xlrd import open_workbook from xlutils.copy import copy\n#读取excel文件 r_xls = open_workbook(\u0026ldquo;test.xls\u0026rdquo;)\n获取已有的行数row = r_xls.sheets()[0].nrows\n将xlrd的对象转化为xlwt的对象excel = copy(r_xls)\n获取要操作的sheettable = excel.get_sheet(0)\n#对excel表追加一行内容，括号内分别为行数、列数、内容 table.write(row, 0, \u0026lsquo;内容1\u0026rsquo;) table.write(row, 1, \u0026lsquo;内容2\u0026rsquo;) table.write(row, 2, \u0026lsquo;内容3\u0026rsquo;)\n#保存并覆盖文件 excel.save(\u0026ldquo;test.xls\u0026rdquo;)","tags":"","title":"Python之excel文件追加内容","url":"/posts/2018-02-02-python%E4%B9%8Bexcel%E6%96%87%E4%BB%B6%E8%BF%BD%E5%8A%A0%E5%86%85%E5%AE%B9/"},{"date":"12 December, 2015","subtitle":"wamp集成在安装完后默认是没有开启伪静态的，下面是wamp开启rewrite伪静态的方法：\n第一步：打开wamp安装目录里的bin文件夹，找到Apache安装目录下的conf目录中的httpd.conf这个文件\n(例如我的是：D:\\wamp\\bin\\apache\\Apache2.2.11\\conf)\n查找，“LoadModule rewrite_module modules/mod_rewrite.so”，去掉前面的“#”；\n第二步：找到“AllowOverride None”改为“AllowOverride All”，好像有两处；\n第三步：重启apache，完成！","tags":"","title":"wamp集成环境开启伪静态","url":"/posts/2015-12-12-wamp%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83%E5%BC%80%E5%90%AF%E4%BC%AA%E9%9D%99%E6%80%81/"},{"date":"16 November, 2015","subtitle":"一般我们准备做一个博客网站之前，大概都是什么样的状态呢？嗯……让我猜猜，你大概是兴奋 ！其实这不单是你，很多博主在建立自己域名的独立博客之前都是一样的状态。 现在的互联网主机市场，到处都是“顶级虚拟主机”的网站（这些基本的都是个人网站，要么是代理，要么是自己租用别人的，要么是自己随便整两个机子），便宜的价格，无限制的空间，各种优惠…等等都会吸引你去购买他们的相对“便宜和最好的”虚拟主机。\n错误1：搜索“顶级虚拟主机’在互联网上，最不幸就是好和坏都是共存的，主机服务也是一样。还有很多人希望随便做点事情就可以赚一些钱。 各种所谓的“顶级虚拟主机的网站管理员”大概就属于这一类。 他们卖出去的大部分所谓的“顶级虚拟主机（通常是共享主机）”中，很多是根据客户下单的金额多少来订购相应的主机配置。 很明显，很多在这些网站上的主机质量数据是都是假的。\n搜索“顶级虚拟主机'\r现在有很多假的主机评测网站，当然也有很多假的评论在里面。选择一个真正的虚拟主机评测网站或论坛也是很重要的。国内的主机评测网站，暂时还没有一个像样的，至少我个人觉得是这样。不管是主机之家，主机评测网还是虚拟主机评测网，都差不多。国外主机评测论坛推荐一个WebHostingTalk，做的不错。\n错误2：寻找各种“无限”的虚拟主机很多人刚开始建站的时候，就在寻找“无限”的虚拟主机。好像都认为，那些idc提供的所谓“无限”，都是最好的主机。但是一般的博客或者企业网站在刚开始的时候根本不需要什么无限的空间，无限的流量。这些多余的东西一点用都没有。最重要的还是稳定和速度。\n寻找各种“无限”的虚拟主机\r看着上面的图片是不是很眼熟啊。淘宝一搜一大把这样的广告图片。又高速，有稳定，还在美国，你信么？\n事实上，没有一个idc会提供“无限”的服务，至少虚拟主机这个行业不会有。什么无限制空间，无限制域名绑定，无限制转发，无限制流量…那都是浮云。这些都是不可能的，有脑子的人都会知道，哪个逗比会让客户在主机上托管一个无限的帐户，更不用说为他们提供无限的存储和带宽。\n错误3：价格比什么都重要在第一次选择购买虚拟主机的时候，不要让价格成为决定购买哪台主机的唯一因素。 当然，便宜的主机看起来总是很受欢迎的，但不要忘了“便宜”和“买得起”的差别。没钱的时候，再便宜的主机在你面前也是高价。\n我之前购买过一个景安的Linux主机，从代理那边淘宝购买的，180一年，空间整体配置和流量额都相当不错。第一年服务都还可以（毕竟是景安的），第二年不知道搞什么，直接代理网站挂了，然后贴了一个公告，说公司内部原因，所有的主机业务都放弃了。我的空间也这样不了了之了，ftp账户权限被封，只能下载，不能上传。没多久这个网店都变成了卖鞋子衣服什么的了，人也联系不到。可惜我的一年主机只用了三四个月。\n价格比什么都重要\r顺便曝光一下这家垃圾的IDC代理公司：卓亿网络。大家以后别相信他们。\n一个好的虚拟主机所能提供像样的服务和客户的付出是对等的。如果一个IDC提供各种高端配置服务，但是他们的价格又很便宜，那么这家公司不是骗子就是逗比。\n因为有句老话说的好： 一分价钱一分货。虚机主机也是一样！\n错误4：被忽略的服务条款大多数人不关心idc提供的服务类型和有关邮件系统的一系列说明。事实上是，如果你不读你购买签约的主机服务条款，你的网站出麻烦那是迟早的事。 出事的概率比你去找那些“无限”的虚机主机还要高，因为很多IDC试图通过他们的服务类型来限制你的资源使用情况。包括邮件系统账户的各种限制，比如有多少邮件账户，您可以每小时发送多少封邮件等等。\n被忽略的服务条款\r服务类型通常还包括主机的退款政策。 不要相信那些什么“30天无忧退款”、“7天不满意全额退款”之类的标语。 好好看看你的idc提供的退款政策是和你认为的是实际相符的，绝对有益。\n错误5：选择“最便宜”的虚机主机当你看了很多idc广告和网站之后终于决定要购买一个虚拟主机的时候，买一个最便宜的主机并不是最适合你的。虚拟主机的空间配置和价格从始至终都是相关联的。如果想要得到应有的服务，那么就要付出相应的金额。\n最好的一个例子就是一些idc的免费活动。下面以景安IDC（绝对不是帮人打广告，骂娘的滚一边去）为例子。\n选择“最便宜”的虚机主机\r看见上面的免费空间的配置了么。看起来还是挺诱人的。但是别忘了页面底部下面的一些注意事项：网站需要备案，而且有类型限制，而且首页必须加上景安的logo连接，不能使用js跳转等等，不然就给你来个无理由删除。\n为什么有些主机商同时提供免费和收费两种服务呢？\n答案是： 免费的服务提供支持较差，不保证对服务器的稳定性和正常运行。此外，一旦你的网站所占空间和流量增大了，你绝对会受到某一个资源的限制或者是其他限制，这点估计在他们的服务条款中也会提到这样的约束，有没有仔细看那就是你的事情了。\n错误6：对新主机还不是很了解就购买一年时间如果你没有什么购买使用虚拟主机的经验，那么建议不要一下子购买一年或一年以上。因为大多数情况下，你很难拿回在别人口袋里但是是属于自己的钱（包括那些号称各种包退的），你买的时间越长，浪费的也有可能越多。\n就像我现在用的阿里云主机，我是试用过一些时间才决定购买的。当然，有些主机是不提供试用的，那么你可以选择购买一个月，或者更短的一个试用周期，看看具体的使用效果。好的话可以直接续费一年，不行就再换一个（如果你忍受不了折腾，又或者你是个土豪，那就另说了）。\n任何主机测评网站的评论都没有比自己去试用更知道他们的服务质量。\n总结：当你开始建自己博客网站准备购买虚拟主机时，请记住这6个失误。大家通常在犯的错误，你就不要再犯了。选择了一个好的虚拟主机，对你的网站运行和后期的推广运营都会起到相当大的作用。 当然，如果你不在乎那点小钱，你可以直接选择一些大的虚拟主机提供商，理由就不再赘述了。\n如果你碰巧也犯了上面的这些错误，欢迎在下面吐槽交流。\n原文来自欲思博客","tags":"","title":"选择虚拟主机常犯的6个错误","url":"/posts/2015-11-16-%E9%80%89%E6%8B%A9%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E5%B8%B8%E7%8A%AF%E7%9A%846%E4%B8%AA%E9%94%99%E8%AF%AF/"},{"date":"15 November, 2015","subtitle":"搜索引擎的一些高级搜索指令，帮助你更快的找到想要的信息，更是seo人员必备的技巧.1、双引号显示完整信息：双引号代表完全匹配，现在百度和Google都支持该指令。在搜索时把关键词加上双引号就能返回包括整个完整的词的搜索结果。比如我们搜索“糖半甜饮品”这个关键词，如果加上双引号的话，那么返回的结果只显示那些完整出现糖半甜饮品的网页，单独出现糖半甜和单独出现饮品，以及糖半甜饮品没有完整连续出现的页面将不显示。这样在做SEO的时候就能一步到位的准确查找指定的竞争对手。\n2、减号结果更精准：有时候我们搜索一个词的时候却返回了很多不想要的结果，搜索引擎认为很多词和你搜索的词有一定的相关性就全部返回了搜索结果，这样就会给我们找到目标页面带来很大的影响。这时就能使用减号这个高级指令，比如搜索“糖半甜 -饮品”，返回的结果如下图所示，需要注意的是在减号前面一定要有空格，减号后边紧跟要排除的词。\n3、星号适用Google：现在百度、soso和搜狗三个搜索引擎不支持星号，而Goolge支持，喜欢Goolge的朋友要注意星号的使用。星号是一个通配符，能匹配所有的字符，在一些特殊的情况下可以使用星号进行搜索。比如在Goolge中输入“搜索*擎”，那么会显示包括搜索影擎之类的结果。\n4、inurl包含网址：inurl是我个人最常用的高级搜索指令之一，十分强大，支持百度、Google都主流的搜索引擎。inurl从字面的意思可以看出就是网址中包含的意思，比如你搜索一篇文章时候，想快速知道某个网站是否收录了这篇文章，就能使用inurl这个指令，具体的用法是inurl：adc或者abc inurl:efg，前者只是搜索网址中包含abc的结果，后者是网址中包含efg并且内容包含abc。这个指令建议大家好好练习多使用，很有用。\n5、inanchor主要检查锚文本：这个指令可以返回导入锚文本中包含搜索词的页面，比如一个锚文字是A，链接的网址是B，那么用inanchor在搜索A这个关键词时，显示的结果为B，因为A有指向B的锚文本链接。但遗憾的是百度目前不支持这个指令。我们可以使用Google来查询竞争对手都做了哪些外部链接，这一点在优化的过程中十分有用。\n6、intitle查看标题关键词：intitle顾名思义包含在title中的意思，当我们使用intitle这个搜索指令时，就会返回标题中包含该关键词的网页，这样就能返回更加准确的结果。比如我们研究某个关键词的竞争程度，可以在搜索引擎中使用intitle指令，这样就能看到以该关键词为目标的全部竞争对手，能很好的帮助我们筛选最主要的竞争对手。普通用户也可以使用这个指令，能找到更加符合的信息，相当于一个过滤作用。\n7、allintitle词串：这个指令指的是返回的页面标题中包含多组关键词的文件，比如我们搜索SEO和搜索引擎优化，使用这个指令应该是allintitle：SEO 搜索引擎优化，其作用相当于intitle:SEO intitle:搜索引擎优化。只不过这个指令有些不好记，单词过长，一般情况下使用intitle还是比较多的。但如果能记住这个词的话，有时候还是能用的上。\n8、allinurl组结果：这个指令类似于inurl，指返回url中包含所有搜索关键词的相关结果。但是使用inurl一次只能搜索一个词，而使用这个一次能搜索一个词组。大家感觉这个词不要记的话可以进行拆分，分别拆成三个单词，all、in和url，这样all是全部的意思，in是里边，包含的意思，url指的是中文网址。那以后在搜索的时候就可以使用这个指令。\n9、filetype特定文件：这个指令还是很有用处，比如我们想搜索电子书或者是doc、txt、pdf文档时，就能利用这个方法，主要的作用就是返回搜索类型相匹配的文件。现在百度和Google都支持这个指令。但并不是所有的格式百度都会支持，现在百度支持的格式有pdf、doc、xls、all、ppt、rtf，其中的all表示搜索所有百度支持的文件，这样返回的结果就会更多。\n10、site查询收录：site大家可能再熟悉不过了，是SEO中最常用的指令，用来查看搜索引擎对某个域名下的所有收录文件。seo人员每天都会查看自己网站的收录数量，但是site不是完全准确，只是一个大概的数据，尤其对于Google，使用site时经常有大幅度的波动，只是大家可以参考的数据。但一般的收录查询用这个就完全可以了。因为搜索引擎的数据在实时的进行变化，所以我们也不需要完全的收录数据，现实中也不可能得到。\n11、link查询链接：link是SEO中比较常用的一个高级指令，主要搜索某个网站url的内部链接和外部链接，但这个指令并不是对每个搜索引擎都很准，尤其是Google，它只会返回索引库中的一部分，并且是随机的一部分，而百度则不支持这个指令。但好的是雅虎全面支持，而且查询的比较准确，一般我们查看网站的链接都以雅虎为准，现在很多站长工具，不论是网页的也好还是软件的，一般都是提供的雅虎数据。\n12、linkdomain查询反向链接：反向链接在SEO中的作用我想每个优化人员都知道，一个网站反向链接的多少能直接影响该网站的整体权重，所以常常查询网站的反向链接时，就要使用这个linkdomain命令。和link类似，百度和Google都不支持，所以以雅虎为准。比如查询一个域名http://www.bft888.com的反向链接，那么就可以再地址栏中输入：linkdomain:http://www.bft888.com -site:http://www.bft888.com，这样查询的数据就比较准确，已经排除了自身的内部链接。使用这个命令不但对自己有很大帮助，更能迅速的找到合适的竞争对手都做了哪些外部链接，能为我们省去不少的时间。因此对于站长朋友，一定要记着这个强大易用的指令。\n13、related查相关页面：这个指令和前边唯一相似的地方在于只是用一个搜索引擎，这个使用于Google。他的作用是返回与搜索结果想关联的页面。我们使用related可以查询自己的网站和哪些网站有关联。这是个很有趣的命令，但是Google官方并没有正式说明有关联具体都指什么地方。根据我们搜索时发现，一般都会显示与你网站有相同外部链接的网站。例如搜索A这个站点，会返回B、C、D等一些列站点，这些站点通常都有有相同的外部链接。所以，这个命令的实用性价值没有linkdomain高，但也能从一定程度上分析竞争对手在外部链接上和我们都做了哪些相同的工作。","tags":"","title":"搜索引擎之高级搜索指令","url":"/posts/2015-11-15-%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%B9%8B%E9%AB%98%E7%BA%A7%E6%90%9C%E7%B4%A2%E6%8C%87%E4%BB%A4/"},{"date":"10 November, 2015","subtitle":"摘要: 屌丝程序员的逆袭一般分两步: 让自己变得牛逼, 让别人知道你牛逼. 我通过写博客来让自己更擅长归纳和抽象, 也通过写博客来让别人知道我能胜任某份工作.\n一个程序员的自白：我为什么写博客\r牛人都这么干时间: 2011年\n人物: 初出茅庐的臭小子, 臭石头一般坚硬的相信我将来一定会成为富二代他爹.\n我来到一个大型互联网公司, 同事很nice, 管理很自由, 在这里开始了我的码农生涯.\n我很敬重部门老大, 但更相信我将来一定比他强. 我看到30岁左右的公司前辈们, 为了家庭奔波, 为了孩子操劳, 心里或许拂过一丝轻谑. ( 当我写这句话, 我是在对自己幼稚的轻谑 )\n当然我并不是毫无基础的就有了这些脆弱的自信. 我一直相信, 只要我每一天都在进步, 总会有到达成功的那一天. 所以, 每次游戏碰到大家都不熟悉的领域, 我都自告奋勇去领命, 然后在前辈们都回家 陪老婆孩子的时候, 我却在钻研这些小众歪门的技术, 自以为这是能力的体现. 事实也证明了它的确代表了我的一部分能力, 也让它在上级面前得到了彰显, 但远没有我想象的那么重要. 因为, 如果真的有那么重要, 为什么旁边独立办公室里没有我.\n那时天真的以为月入N万, 能在北京好好生存, 便是成功. 于是我很开心, 因为那”成功”是如此的可以触摸, 就在眼前. 我随便搞搞5,6年也就达到了, 稍微使点劲儿也许就3,4年. 而在那之后, 我就可以放心的做很多自己想做的事情, 旅游, 摄影, 吃喝玩乐之类.\n而现在, 我缺找不到对”成功”的定义了. 人生最大的无耐就在于, 当马上就达到终点却发现自己看走了眼. 让我开始怀疑它的因素有很多: 比如发现即使月入2N万也没法过得上我上面提到的体面的生活, 比如北京的空气和气候总是把出门散心的想法扼杀在摇篮里, 再比如北京复杂的生存环境.\n一方面,我对新的社会各种无知; 另一方面却坚定不移的相信努力就会比别人强. 我见过很多牛人写博客, 就以为这是牛人谓之牛人的原因. 我如果坚持照做, 就会成为牛人. 说白了, 这从头至尾就是一种低级的模仿, 不明所以的跟随.","tags":"","title":"一个码农的自白：我为什么写博客","url":"/posts/2015-11-10-%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E7%99%BD%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E5%86%99%E5%8D%9A%E5%AE%A2/"},{"date":"1 January, 0001","subtitle":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setupSearch depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":"","title":"Search Results","url":"/posts/search/"}]